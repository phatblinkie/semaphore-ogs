---
- name: Gather Windows System Status Data
  hosts: win_hosts
  vars:
    ansible_remote_tmp: /var/tmp/ans
    host_key_checking: false
    services_to_check:
      default:
        - winrm
      '192.168.11.57':
        - winrm
        - nginx
        - mysqld
      '192.168.10.19':
        - sshd
  gather_facts: false
  tasks:
    - name: Gather data from Windows hosts
      block:
        - name: Test Connections
          wait_for_connection:
            delay: 1
            timeout: 30

        - name: Initialize system_status_results
          set_fact:
            system_status_results: []
            app_check_results: []

        - name: Gather Ansible Ping
          win_ping:
          register: ansible_ping_output

        - name: Gather Windows Uptime
          win_shell: |
            $uptime = (Get-CimInstance -ClassName Win32_OperatingSystem).LastBootUpTime
            $uptime = (Get-Date) - $uptime
            [math]::Round($uptime.TotalSeconds)
          register: uptime_output

        - name: Gather Disk Capacity for all partitions
          win_shell: |
            Get-Volume | Where-Object { $_.DriveType -eq 'Fixed' -and $_.DriveLetter } | Select-Object DriveLetter, @{Name="Used";Expression={[math]::Floor((($_.Size - $_.SizeRemaining) / $_.Size) * 100)}} | ForEach-Object { "$($_.DriveLetter) $($_.Used)" }
          register: disk_capacity_output

            #        - name: Debug Disk Capacity Output
            #          debug:
            #            var: disk_capacity_output

        - name: Gather Process Usage
          win_shell: (Get-WmiObject -Class Win32_Processor | Measure-Object -Property LoadPercentage -Average).Average
          register: proc_usage_output

        - name: Determine services to check
          set_fact:
            services_to_check_for_host: "{{ services_to_check[inventory_hostname] | default(services_to_check['default']) }}"

        - name: Gather App Check for WinRM
          win_service:
            name: WinRM
            start_mode: auto
            state: started
          register: app_check_output

        - name: Get info for all installed services
          ansible.windows.win_service_info:
          register: service_info_output
#        - name: Rescue-Output results failed hosts
#          debug:
#            var: service_info_output

        - name: Clean up disk capacity output
          set_fact:
            cleaned_disk_capacity: "{{ disk_capacity_output.stdout_lines | map('regex_replace', '^\\s+', '') | join(', ') }}"

        - name: Append Windows data to results
          set_fact:
            system_status_results: |
              {{
                system_status_results + [{
                  "hostname": inventory_hostname,
                  "ansible_ping": ansible_ping_output.ping,
                  "disk_capacity": cleaned_disk_capacity,
                  "proc_usage": proc_usage_output.stdout_lines,
                  "app_check": app_check_output.state,
                  "uptime": uptime_output.stdout,
                  "project_id": semaphore_vars.task_details.project_id,
                  "task_id": semaphore_vars.task_details.id
                }]
              }}

        - name: Send custom data to web URL
          ansible.builtin.uri:
            url: "http://localhost/post/store_system_status.php"
            method: POST
            body_format: json
            body: "{{ system_status_results }}"
            headers:
              Content-Type: application/json
            status_code: 200
            return_content: True
          register: postoutput
          delegate_to: localhost

#        - name: Output
#          ansible.builtin.debug:
#            msg:
#              - "post output:"
#              - "{{ postoutput }}"
#              - "semaphore vars"
#              - "{{ semaphore_vars }}"

            #        - name: Output results
            #          debug:
            #            var: system_status_results

      rescue:
        - name: Rescue-Initialize system_status_results
          set_fact:
            system_status_results: []

        - name: Rescue-Append Windows data to results
          set_fact:
            system_status_results: |
              {{
                system_status_results + [{
                  "hostname": inventory_hostname,
                  "ansible_ping": "unreachable",
                  "disk_capacity": "0",
                  "proc_usage": ["0"],
                  "app_check": "system: unreachable",
                  "uptime": "0",
                  "project_id": semaphore_vars.task_details.project_id,
                  "task_id": semaphore_vars.task_details.id
                }]
              }}

        - name: Rescue-Send custom data to web URL for failed hosts
          ansible.builtin.uri:
            url: "http://localhost/post/store_system_status.php"
            method: POST
            body_format: json
            body: "{{ system_status_results }}"
            headers:
              Content-Type: application/json
            status_code: 200
            return_content: True
          register: postoutput
          delegate_to: localhost

#        - name: Rescue-Output results failed hosts
#          debug:
#            var: system_status_results

#        - name: Rescue-Output post results
#          debug:
#            var: postoutput
