{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport EventBus from '@/event-bus';\nimport ProjectForm from '@/components/ProjectForm.vue';\nimport { getErrorMessage } from '@/lib/error';\nimport axios from 'axios';\nimport YesNoDialog from '@/components/YesNoDialog.vue';\nexport default {\n  components: {\n    YesNoDialog,\n    ProjectForm\n  },\n  props: {\n    projectId: Number,\n    projectType: String\n  },\n  data() {\n    return {\n      deleteProjectDialog: null\n    };\n  },\n  methods: {\n    showDrawer() {\n      EventBus.$emit('i-show-drawer');\n    },\n    onError(e) {\n      EventBus.$emit('i-snackbar', {\n        color: 'error',\n        text: e.message\n      });\n    },\n    onSave(e) {\n      EventBus.$emit('i-project', {\n        action: 'edit',\n        item: e.item\n      });\n    },\n    async saveProject() {\n      await this.$refs.form.save();\n    },\n    async backupProject() {\n      try {\n        await axios({\n          method: 'get',\n          url: `/api/project/${this.projectId}/backup`,\n          transformResponse: res => res,\n          // Necessary to not parse json\n          responseType: 'json'\n        }).then(backup => {\n          const a = document.createElement('a');\n          const blob = new Blob([backup.data], {\n            type: 'application/json'\n          });\n          a.download = `backup_${this.projectId}_${Date.now()}.json`;\n          a.href = URL.createObjectURL(blob);\n          a.click();\n        });\n      } catch (err) {\n        EventBus.$emit('i-snackbar', {\n          color: 'error',\n          text: getErrorMessage(err)\n        });\n      }\n    },\n    async deleteProject() {\n      try {\n        await axios({\n          method: 'delete',\n          url: `/api/project/${this.projectId}`,\n          responseType: 'json'\n        });\n        EventBus.$emit('i-project', {\n          action: 'delete',\n          item: {\n            id: this.projectId\n          }\n        });\n      } catch (err) {\n        EventBus.$emit('i-snackbar', {\n          color: 'error',\n          text: getErrorMessage(err)\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;EAAA;EACAC;IACAC;IACAC;EACA;EAEAC;IACA;MACAC;IACA;EACA;EAEAC;IACAC;MACAC;IACA;IAEAC;MACAD;QACAE;QACAC;MACA;IACA;IAEAC;MACAJ;QACAK;QACAC;MACA;IACA;IAEA;MACA;IACA;IAEA;MACA;QACA;UACAC;UACAC;UACAC;UAAA;UACAC;QACA;UACA;UACA;YAAAC;UAAA;UACAC;UACAA;UACAA;QACA;MACA;QACAZ;UACAE;UACAC;QACA;MACA;IACA;IAEA;MACA;QACA;UACAI;UACAC;UACAE;QACA;QACAV;UACAK;UACAC;YACAO;UACA;QACA;MACA;QACAb;UACAE;UACAC;QACA;MACA;IACA;EACA;AACA","names":["components","YesNoDialog","ProjectForm","props","projectId","projectType","data","deleteProjectDialog","methods","showDrawer","EventBus","onError","color","text","onSave","action","item","method","url","transformResponse","responseType","type","a","id"],"sourceRoot":"src/views/project","sources":["Settings.vue"],"sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div>\n    <YesNoDialog\n      v-model=\"deleteProjectDialog\"\n      :title=\"$t('deleteProject')\"\n      :text=\"$t('askDeleteProj')\"\n      @yes=\"deleteProject()\"\n    />\n\n    <v-toolbar flat >\n      <v-app-bar-nav-icon @click=\"showDrawer()\"></v-app-bar-nav-icon>\n      <v-toolbar-title>{{ $t('dashboard') }}</v-toolbar-title>\n    </v-toolbar>\n\n    <v-tabs show-arrows class=\"pl-4\">\n      <v-tab\n        v-if=\"projectType === ''\"\n        key=\"history\"\n        :to=\"`/project/${projectId}/history`\"\n      >{{ $t('history') }}</v-tab>\n      <v-tab key=\"activity\" :to=\"`/project/${projectId}/activity`\">{{ $t('activity') }}</v-tab>\n      <v-tab key=\"settings\" :to=\"`/project/${projectId}/settings`\">{{ $t('settings') }}</v-tab>\n    </v-tabs>\n\n    <div class=\"project-settings-form\">\n      <div style=\"height: 300px;\">\n        <ProjectForm :item-id=\"projectId\" ref=\"form\" @error=\"onError\" @save=\"onSave\"/>\n      </div>\n\n      <div class=\"text-right\">\n        <v-btn color=\"primary\" @click=\"saveProject()\">{{ $t('save') }}</v-btn>\n      </div>\n    </div>\n    <div class=\"project-backup project-settings-button\">\n      <v-row align=\"center\">\n        <v-col class=\"shrink\">\n          <v-btn color=\"primary\" @click=\"backupProject\" >{{ $t('backup') }}\n          </v-btn>\n        </v-col>\n        <v-col class=\"grow\">\n          <div style=\"font-size: 14px;\">\n            {{ $t('downloadTheProjectBackupFile') }}\n          </div>\n        </v-col>\n      </v-row>\n    </div>\n    <div class=\"project-delete-form project-settings-button\">\n      <v-row align=\"center\">\n        <v-col class=\"shrink\">\n          <v-btn color=\"error\" @click=\"deleteProjectDialog = true\">{{ $t('deleteProject2') }}\n          </v-btn>\n        </v-col>\n        <v-col class=\"grow\">\n          <div style=\"font-size: 14px; color: #ff5252\">\n            {{ $t('onceYouDeleteAProjectThereIsNoGoingBackPleaseBeCer') }}\n          </div>\n        </v-col>\n      </v-row>\n    </div>\n  </div>\n</template>\n<style lang=\"scss\">\n.project-settings-form {\n  max-width: 400px;\n  margin: 40px auto;\n}\n  .project-settings-button {\n    max-width: 400px;\n    margin: 20px auto auto;\n  }\n</style>\n<script>\nimport EventBus from '@/event-bus';\nimport ProjectForm from '@/components/ProjectForm.vue';\nimport { getErrorMessage } from '@/lib/error';\nimport axios from 'axios';\nimport YesNoDialog from '@/components/YesNoDialog.vue';\n\nexport default {\n  components: { YesNoDialog, ProjectForm },\n  props: {\n    projectId: Number,\n    projectType: String,\n  },\n\n  data() {\n    return {\n      deleteProjectDialog: null,\n    };\n  },\n\n  methods: {\n    showDrawer() {\n      EventBus.$emit('i-show-drawer');\n    },\n\n    onError(e) {\n      EventBus.$emit('i-snackbar', {\n        color: 'error',\n        text: e.message,\n      });\n    },\n\n    onSave(e) {\n      EventBus.$emit('i-project', {\n        action: 'edit',\n        item: e.item,\n      });\n    },\n\n    async saveProject() {\n      await this.$refs.form.save();\n    },\n\n    async backupProject() {\n      try {\n        await axios({\n          method: 'get',\n          url: `/api/project/${this.projectId}/backup`,\n          transformResponse: (res) => res, // Necessary to not parse json\n          responseType: 'json',\n        }).then((backup) => {\n          const a = document.createElement('a');\n          const blob = new Blob([backup.data], { type: 'application/json' });\n          a.download = `backup_${this.projectId}_${Date.now()}.json`;\n          a.href = URL.createObjectURL(blob);\n          a.click();\n        });\n      } catch (err) {\n        EventBus.$emit('i-snackbar', {\n          color: 'error',\n          text: getErrorMessage(err),\n        });\n      }\n    },\n\n    async deleteProject() {\n      try {\n        await axios({\n          method: 'delete',\n          url: `/api/project/${this.projectId}`,\n          responseType: 'json',\n        });\n        EventBus.$emit('i-project', {\n          action: 'delete',\n          item: {\n            id: this.projectId,\n          },\n        });\n      } catch (err) {\n        EventBus.$emit('i-snackbar', {\n          color: 'error',\n          text: getErrorMessage(err),\n        });\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}