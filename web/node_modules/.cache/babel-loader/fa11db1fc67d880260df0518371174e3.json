{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TaskForm from './TaskForm.vue';\nimport EditDialog from './EditDialog.vue';\nimport { TEMPLATE_TYPE_ACTION_TITLES, TEMPLATE_TYPE_ICONS } from '../lib/constants';\nimport EventBus from '../event-bus';\nexport default {\n  components: {\n    TaskForm,\n    EditDialog\n  },\n  props: {\n    value: Boolean,\n    projectId: Number,\n    templateId: [Number, String],\n    templateType: String,\n    templateAlias: String,\n    templateApp: String\n  },\n  data() {\n    return {\n      dialog: false,\n      TEMPLATE_TYPE_ACTION_TITLES,\n      TEMPLATE_TYPE_ICONS\n    };\n  },\n  watch: {\n    async dialog(val) {\n      this.$emit('input', val);\n    },\n    async value(val) {\n      this.dialog = val;\n    }\n  },\n  methods: {\n    closeDialog(e) {\n      this.dialog = false;\n      if (e) {\n        EventBus.$emit('i-show-task', {\n          taskId: e.item.id\n        });\n        this.$emit('save', e);\n      }\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AAEA;AACA;AAEA;EACAA;IACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA;IACA;IAEA;MACA;IACA;EACA;EAEAC;IACAC;MACA;MACA;QACAC;UACAC;QACA;QACA;MACA;MACA;IACA;EACA;AACA","names":["components","TaskForm","EditDialog","props","value","projectId","templateId","templateType","templateAlias","templateApp","data","dialog","TEMPLATE_TYPE_ACTION_TITLES","TEMPLATE_TYPE_ICONS","watch","methods","closeDialog","EventBus","taskId"],"sourceRoot":"src/components","sources":["NewTaskDialog.vue"],"sourcesContent":["<template>\n  <EditDialog\n    v-model=\"dialog\"\n    :save-button-text=\"$t(TEMPLATE_TYPE_ACTION_TITLES[templateType])\"\n    :title=\"$t('newTask')\"\n    @save=\"closeDialog\"\n    @close=\"closeDialog\"\n  >\n    <template v-slot:title={}>\n      <v-icon small class=\"mr-4\">{{ TEMPLATE_TYPE_ICONS[templateType] }}</v-icon>\n      <span class=\"breadcrumbs__item\">{{ templateAlias }}</span>\n      <v-icon>mdi-chevron-right</v-icon>\n      <span class=\"breadcrumbs__item\">{{ $t('newTask') }}</span>\n    </template>\n\n    <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n      <TaskForm\n        v-if=\"['terraform', 'tofu'].includes(templateApp)\"\n        :project-id=\"projectId\"\n        item-id=\"new\"\n        :template-id=\"templateId\"\n        @save=\"onSave\"\n        @error=\"onError\"\n        :need-save=\"needSave\"\n        :need-reset=\"needReset\"\n      />\n      <TaskForm\n        v-else\n        :project-id=\"projectId\"\n        item-id=\"new\"\n        :template-id=\"templateId\"\n        @save=\"onSave\"\n        @error=\"onError\"\n        :need-save=\"needSave\"\n        :need-reset=\"needReset\"\n      />\n    </template>\n  </EditDialog>\n</template>\n<script>\nimport TaskForm from './TaskForm.vue';\nimport EditDialog from './EditDialog.vue';\n\nimport { TEMPLATE_TYPE_ACTION_TITLES, TEMPLATE_TYPE_ICONS } from '../lib/constants';\nimport EventBus from '../event-bus';\n\nexport default {\n  components: {\n    TaskForm,\n    EditDialog,\n  },\n  props: {\n    value: Boolean,\n    projectId: Number,\n    templateId: [Number, String],\n    templateType: String,\n    templateAlias: String,\n    templateApp: String,\n  },\n  data() {\n    return {\n      dialog: false,\n      TEMPLATE_TYPE_ACTION_TITLES,\n      TEMPLATE_TYPE_ICONS,\n    };\n  },\n  watch: {\n    async dialog(val) {\n      this.$emit('input', val);\n    },\n\n    async value(val) {\n      this.dialog = val;\n    },\n  },\n\n  methods: {\n    closeDialog(e) {\n      this.dialog = false;\n      if (e) {\n        EventBus.$emit('i-show-task', {\n          taskId: e.item.id,\n        });\n        this.$emit('save', e);\n      }\n      this.$emit('close');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}