{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PageBottomSheet from '@/components/PageBottomSheet.vue';\nexport default {\n  props: {\n    value: Boolean,\n    tableName: String,\n    headers: Array\n  },\n  components: {\n    PageBottomSheet\n  },\n  data() {\n    return {\n      sheet: false,\n      settings: null\n    };\n  },\n  watch: {\n    async sheet(val) {\n      this.$emit('input', val);\n    },\n    async value(val) {\n      this.sheet = val;\n    },\n    headers() {\n      this.loadSettings();\n    }\n  },\n  created() {\n    this.loadSettings();\n  },\n  methods: {\n    saveSettings() {\n      localStorage.setItem(`${this.tableName}__settings`, JSON.stringify(this.settings));\n      this.loadSettings();\n    },\n    loadSettings() {\n      if (localStorage.getItem(`${this.tableName}__settings`)) {\n        this.settings = JSON.parse(localStorage.getItem(`${this.tableName}__settings`));\n      } else {\n        this.settings = {\n          columns: {}\n        };\n      }\n      this.headers.forEach(header => {\n        if (!this.settings.columns[header.value]) {\n          this.settings.columns[header.value] = {\n            visible: true\n          };\n        }\n      });\n      this.$emit('change', {\n        settings: this.settings,\n        headers: this.headers.filter(header => {\n          const column = this.settings.columns[header.value];\n          return !column || column.visible;\n        })\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAiBA;AAEA;EACAA;IACAC;IACAC;IACAC;EACA;EAEAC;IAAAC;EAAA;EAEAC;IACA;MACAC;MACAC;IACA;EACA;EAEAC;IACA;MACA;IACA;IAEA;MACA;IACA;IACAN;MACA;IACA;EACA;EAEAO;IACA;EACA;EAEAC;IACAC;MACAC;MACA;IACA;IACAC;MACA;QACA,2BACAD,mDACA;MACA;QACA;UACAE;QACA;MACA;MAEA;QACA;UACA;YACAC;UACA;QACA;MACA;MAEA;QACAR;QACAL;UACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["props","value","tableName","headers","components","PageBottomSheet","data","sheet","settings","watch","created","methods","saveSettings","localStorage","loadSettings","columns","visible"],"sourceRoot":"src/components","sources":["TableSettingsSheet.vue"],"sourcesContent":["<template>\n  <PageBottomSheet v-model=\"sheet\" v-if=\"settings\">\n    <h4>{{ $t('columns') }}</h4>\n    <div class=\"d-flex flex-row flex-wrap\">\n      <v-checkbox\n        class=\"mr-6\"\n        v-for=\"(header) in headers.filter((header) => header.value !== 'actions')\"\n        :key=\"header.value\"\n        :label=\"header.text\"\n        v-model=\"settings.columns[header.value].visible\"\n        @change=\"saveSettings()\"\n      />\n    </div>\n  </PageBottomSheet>\n</template>\n\n<script>\nimport PageBottomSheet from '@/components/PageBottomSheet.vue';\n\nexport default {\n  props: {\n    value: Boolean,\n    tableName: String,\n    headers: Array,\n  },\n\n  components: { PageBottomSheet },\n\n  data() {\n    return {\n      sheet: false,\n      settings: null,\n    };\n  },\n\n  watch: {\n    async sheet(val) {\n      this.$emit('input', val);\n    },\n\n    async value(val) {\n      this.sheet = val;\n    },\n    headers() {\n      this.loadSettings();\n    },\n  },\n\n  created() {\n    this.loadSettings();\n  },\n\n  methods: {\n    saveSettings() {\n      localStorage.setItem(`${this.tableName}__settings`, JSON.stringify(this.settings));\n      this.loadSettings();\n    },\n    loadSettings() {\n      if (localStorage.getItem(`${this.tableName}__settings`)) {\n        this.settings = JSON.parse(\n          localStorage.getItem(`${this.tableName}__settings`),\n        );\n      } else {\n        this.settings = {\n          columns: {},\n        };\n      }\n\n      this.headers.forEach((header) => {\n        if (!this.settings.columns[header.value]) {\n          this.settings.columns[header.value] = {\n            visible: true,\n          };\n        }\n      });\n\n      this.$emit('change', {\n        settings: this.settings,\n        headers: this.headers.filter((header) => {\n          const column = this.settings.columns[header.value];\n          return !column || column.visible;\n        }),\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}