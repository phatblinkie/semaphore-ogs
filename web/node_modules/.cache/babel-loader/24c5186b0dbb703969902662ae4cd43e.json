{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      aliases: null\n    };\n  },\n  async created() {\n    await this.loadAliases();\n  },\n  computed: {\n    integrationId() {\n      if (/^-?\\d+$/.test(this.$route.params.integrationId)) {\n        return parseInt(this.$route.params.integrationId, 10);\n      }\n      return this.$route.params.integrationId;\n    },\n    aliasPath() {\n      if (!this.integrationId) {\n        return `/api/project/${this.projectId}/integrations/aliases`;\n      }\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/aliases`;\n    }\n  },\n  methods: {\n    async loadAliases() {\n      this.aliases = (await axios({\n        method: 'get',\n        url: this.aliasPath,\n        responseType: 'json'\n      })).data;\n    },\n    async deleteAlias(id) {\n      await axios({\n        method: 'delete',\n        url: `${this.aliasPath}/${id}`\n      });\n      await this.loadAliases();\n    },\n    async addAlias() {\n      await axios({\n        method: 'post',\n        url: this.aliasPath,\n        responseType: 'json'\n      });\n      await this.loadAliases();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","aliases","created","loadAliases","computed","integrationId","test","$route","params","parseInt","aliasPath","projectId","methods","method","url","responseType","deleteAlias","id","addAlias"],"sources":["/home/admin/repos/semaphore-ogs/web/src/views/project/IntegrationsBase.js"],"sourcesContent":["import axios from 'axios';\n\nexport default {\n\n  data() {\n    return {\n      aliases: null,\n    };\n  },\n\n  async created() {\n    await this.loadAliases();\n  },\n\n  computed: {\n    integrationId() {\n      if (/^-?\\d+$/.test(this.$route.params.integrationId)) {\n        return parseInt(this.$route.params.integrationId, 10);\n      }\n      return this.$route.params.integrationId;\n    },\n\n    aliasPath() {\n      if (!this.integrationId) {\n        return `/api/project/${this.projectId}/integrations/aliases`;\n      }\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/aliases`;\n    },\n  },\n\n  methods: {\n\n    async loadAliases() {\n      this.aliases = (await axios({\n        method: 'get',\n        url: this.aliasPath,\n        responseType: 'json',\n      })).data;\n    },\n\n    async deleteAlias(id) {\n      await axios({\n        method: 'delete',\n        url: `${this.aliasPath}/${id}`,\n      });\n      await this.loadAliases();\n    },\n\n    async addAlias() {\n      await axios({\n        method: 'post',\n        url: this.aliasPath,\n        responseType: 'json',\n      });\n      await this.loadAliases();\n    },\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe;EAEbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAED,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;EAC1B,CAAC;EAEDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,IAAI,SAAS,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACH,aAAa,CAAC,EAAE;QACpD,OAAOI,QAAQ,CAAC,IAAI,CAACF,MAAM,CAACC,MAAM,CAACH,aAAa,EAAE,EAAE,CAAC;MACvD;MACA,OAAO,IAAI,CAACE,MAAM,CAACC,MAAM,CAACH,aAAa;IACzC,CAAC;IAEDK,SAASA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACL,aAAa,EAAE;QACvB,OAAQ,gBAAe,IAAI,CAACM,SAAU,uBAAsB;MAC9D;MACA,OAAQ,gBAAe,IAAI,CAACA,SAAU,iBAAgB,IAAI,CAACN,aAAc,UAAS;IACpF;EACF,CAAC;EAEDO,OAAO,EAAE;IAEP,MAAMT,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACF,OAAO,GAAG,CAAC,MAAMF,KAAK,CAAC;QAC1Bc,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,IAAI,CAACJ,SAAS;QACnBK,YAAY,EAAE;MAChB,CAAC,CAAC,EAAEf,IAAI;IACV,CAAC;IAED,MAAMgB,WAAWA,CAACC,EAAE,EAAE;MACpB,MAAMlB,KAAK,CAAC;QACVc,MAAM,EAAE,QAAQ;QAChBC,GAAG,EAAG,GAAE,IAAI,CAACJ,SAAU,IAAGO,EAAG;MAC/B,CAAC,CAAC;MACF,MAAM,IAAI,CAACd,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,MAAMe,QAAQA,CAAA,EAAG;MACf,MAAMnB,KAAK,CAAC;QACVc,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,IAAI,CAACJ,SAAS;QACnBK,YAAY,EAAE;MAChB,CAAC,CAAC;MACF,MAAM,IAAI,CAACZ,WAAW,CAAC,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}