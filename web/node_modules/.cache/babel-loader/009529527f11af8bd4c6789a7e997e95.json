{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport { getErrorMessage } from '@/lib/error';\nexport default {\n  data() {\n    return {\n      signInFormValid: false,\n      signInError: null,\n      signInProcess: false,\n      password: null,\n      username: null,\n      loginHelpDialog: null,\n      oidcProviders: [],\n      loginWithPassword: null\n    };\n  },\n  async created() {\n    if (this.isAuthenticated()) {\n      document.location = document.baseURI;\n    }\n    await axios({\n      method: 'get',\n      url: '/api/auth/login',\n      responseType: 'json'\n    }).then(resp => {\n      this.oidcProviders = resp.data.oidc_providers;\n      this.loginWithPassword = resp.data.login_with_password;\n    });\n  },\n  methods: {\n    makePasswordExample() {\n      let pwd = '';\n      const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      const charactersLength = characters.length;\n      for (let i = 0; i < 10; i += 1) {\n        pwd += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      return pwd;\n    },\n    isAuthenticated() {\n      return document.cookie.includes('semaphore=');\n    },\n    async signIn() {\n      this.signInError = null;\n      if (!this.$refs.signInForm.validate()) {\n        return;\n      }\n      this.signInProcess = true;\n      try {\n        await axios({\n          method: 'post',\n          url: '/api/auth/login',\n          responseType: 'json',\n          data: {\n            auth: this.username,\n            password: this.password\n          }\n        });\n        document.location = document.baseURI + window.location.search;\n      } catch (err) {\n        if (err.response.status === 401) {\n          this.signInError = this.$t('incorrectUsrPwd');\n        } else {\n          this.signInError = getErrorMessage(err);\n        }\n      } finally {\n        this.signInProcess = false;\n      }\n    },\n    async oidcSignIn(provider) {\n      document.location = `/api/auth/oidc/${provider}/login${window.location.search}`;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AAEA;EACAA;IACA;MACAC;MACAC;MACAC;MAEAC;MACAC;MAEAC;MAEAC;MACAC;IACA;EACA;EAEA;IACA;MACAC;IACA;IACA;MACAC;MACAC;MACAC;IACA;MACA;MACA;IACA;EACA;EAEAC;IACAC;MACA;MACA;MACA;MACA;QACAC;MACA;MACA;IACA;IAEAC;MACA;IACA;IAEA;MACA;MAEA;QACA;MACA;MAEA;MACA;QACA;UACAN;UACAC;UACAC;UACAZ;YACAiB;YACAb;UACA;QACA;QACAK;MACA;QACA;UACA;QACA;UACA;QACA;MACA;QACA;MACA;IACA;IAEA;MACAA;IACA;EACA;AACA","names":["data","signInFormValid","signInError","signInProcess","password","username","loginHelpDialog","oidcProviders","loginWithPassword","document","method","url","responseType","methods","makePasswordExample","pwd","isAuthenticated","auth"],"sourceRoot":"src/views","sources":["Auth.vue"],"sourcesContent":["<template>\n  <div class=\"auth\">\n    <v-dialog v-model=\"loginHelpDialog\" max-width=\"600\">\n      <v-card>\n        <v-card-title>\n          {{ $t('howToFixSigninIssues') }}\n          <v-spacer></v-spacer>\n          <v-btn icon @click=\"loginHelpDialog = false\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-card-title>\n        <v-card-text>\n          <p class=\"text-body-1\">\n            {{ $t('firstlyYouNeedAccessToTheServerWhereSemaphoreRunni') }}\n          </p>\n          <p class=\"text-body-1\">\n            {{ $t('executeTheFollowingCommandOnTheServerToSeeExisting') }}\n          </p>\n          <v-alert\n            dense\n            text\n            color=\"info\"\n            style=\"font-family: monospace;\"\n          >\n            {{ $t('semaphoreUserList') }}\n          </v-alert>\n          <p class=\"text-body-1\">\n            {{ $t('youCanChangePasswordOfExistingUser') }}\n          </p>\n          <v-alert\n            dense\n            text\n            color=\"info\"\n            style=\"font-family: monospace;\"\n          >\n            {{\n              $t('semaphoreUserChangebyloginLoginUser123Password', {\n                makePasswordExample:\n                  makePasswordExample()\n              })\n            }}\n          </v-alert>\n          <p class=\"text-body-1\">\n            {{ $t('orCreateNewAdminUser') }}\n          </p>\n          <v-alert\n            dense\n            text\n            color=\"info\"\n            style=\"font-family: monospace;\"\n          >\n            semaphore user add --admin --login user123 --name User123\n            --email user123@example.com --password {{ makePasswordExample() }}\n          </v-alert>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer/>\n          <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"loginHelpDialog = false\"\n          >\n            {{ $t('close2') }}\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-container\n      fluid\n      fill-height\n      align-center\n      justify-center\n      class=\"pa-0\"\n    >\n      <v-form\n        ref=\"signInForm\"\n        lazy-validation\n        v-model=\"signInFormValid\"\n        style=\"width: 300px;\"\n      >\n\n        <v-img\n          width=\"80\"\n          height=\"80\"\n          transition=\"0\"\n          src=\"favicon.png\"\n          style=\"margin: auto;\"\n          class=\"mb-4\"\n        />\n\n        <h3 class=\"text-center mb-8\">{{ $t('semaphore') }}</h3>\n\n        <v-alert\n          :value=\"signInError != null\"\n          color=\"error\"\n          style=\"margin-bottom: 20px;\"\n        >{{ signInError }}\n        </v-alert>\n\n        <v-text-field\n          v-model=\"username\"\n          v-bind:label='$t(\"username\")'\n          :rules=\"[v => !!v || $t('username_required')]\"\n          required\n          :disabled=\"signInProcess\"\n          v-if=\"loginWithPassword\"\n        ></v-text-field>\n\n        <v-text-field\n          v-model=\"password\"\n          :label=\"$t('password')\"\n          :rules=\"[v => !!v || $t('password_required')]\"\n          type=\"password\"\n          required\n          :disabled=\"signInProcess\"\n          @keyup.enter.native=\"signIn\"\n          style=\"margin-bottom: 20px;\"\n          v-if=\"loginWithPassword\"\n        ></v-text-field>\n\n        <v-btn\n          color=\"primary\"\n          @click=\"signIn\"\n          :disabled=\"signInProcess\"\n          block\n          v-if=\"loginWithPassword\"\n        >\n          {{ $t('signIn') }}\n        </v-btn>\n\n        <v-btn\n          v-for=\"provider in oidcProviders\"\n          :color=\"provider.color || 'secondary'\"\n          dark\n          class=\"mt-2\"\n          @click=\"oidcSignIn(provider.id)\"\n          block\n          :key=\"provider.id\"\n        >\n          <v-icon\n            left\n            dark\n            v-if=\"provider.icon\"\n          >\n            mdi-{{ provider.icon }}\n          </v-icon>\n\n          {{ provider.name }}\n        </v-btn>\n\n        <div class=\"text-center mt-6\" v-if=\"loginWithPassword\">\n          <a @click=\"loginHelpDialog = true\">{{ $t('dontHaveAccountOrCantSignIn') }}</a>\n        </div>\n      </v-form>\n    </v-container>\n  </div>\n</template>\n<style lang=\"scss\">\n.auth {\n  height: 100vh;\n}\n</style>\n<script>\nimport axios from 'axios';\nimport { getErrorMessage } from '@/lib/error';\n\nexport default {\n  data() {\n    return {\n      signInFormValid: false,\n      signInError: null,\n      signInProcess: false,\n\n      password: null,\n      username: null,\n\n      loginHelpDialog: null,\n\n      oidcProviders: [],\n      loginWithPassword: null,\n    };\n  },\n\n  async created() {\n    if (this.isAuthenticated()) {\n      document.location = document.baseURI;\n    }\n    await axios({\n      method: 'get',\n      url: '/api/auth/login',\n      responseType: 'json',\n    }).then((resp) => {\n      this.oidcProviders = resp.data.oidc_providers;\n      this.loginWithPassword = resp.data.login_with_password;\n    });\n  },\n\n  methods: {\n    makePasswordExample() {\n      let pwd = '';\n      const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      const charactersLength = characters.length;\n      for (let i = 0; i < 10; i += 1) {\n        pwd += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      return pwd;\n    },\n\n    isAuthenticated() {\n      return document.cookie.includes('semaphore=');\n    },\n\n    async signIn() {\n      this.signInError = null;\n\n      if (!this.$refs.signInForm.validate()) {\n        return;\n      }\n\n      this.signInProcess = true;\n      try {\n        await axios({\n          method: 'post',\n          url: '/api/auth/login',\n          responseType: 'json',\n          data: {\n            auth: this.username,\n            password: this.password,\n          },\n        });\n        document.location = document.baseURI + window.location.search;\n      } catch (err) {\n        if (err.response.status === 401) {\n          this.signInError = this.$t('incorrectUsrPwd');\n        } else {\n          this.signInError = getErrorMessage(err);\n        }\n      } finally {\n        this.signInProcess = false;\n      }\n    },\n\n    async oidcSignIn(provider) {\n      document.location = `/api/auth/oidc/${provider}/login${window.location.search}`;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}