{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport TeamMemberForm from '@/components/TeamMemberForm.vue';\nimport axios from 'axios';\nimport { USER_PERMISSIONS, USER_ROLES } from '@/lib/constants';\nexport default {\n  components: {\n    TeamMemberForm\n  },\n  mixins: [ItemListPageBase],\n  data() {\n    return {\n      USER_ROLES\n    };\n  },\n  methods: {\n    async leftProject() {\n      await axios({\n        method: 'delete',\n        url: `/api/project/${this.projectId}/me`,\n        responseType: 'json'\n      });\n      window.location.reload();\n    },\n    async updateProjectUser(user) {\n      await axios({\n        method: 'put',\n        url: `/api/project/${this.projectId}/users/${user.id}`,\n        responseType: 'json',\n        data: user\n      });\n      await this.loadItems();\n    },\n    allowActions() {\n      return this.can(USER_PERMISSIONS.manageProjectUsers);\n    },\n    getHeaders() {\n      return [{\n        text: this.$i18n.t('name'),\n        value: 'name',\n        width: '50%'\n      }, {\n        text: this.$i18n.t('username'),\n        value: 'username'\n      }, {\n        text: this.$i18n.t('role'),\n        value: 'role'\n      }, {\n        text: this.$i18n.t('actions'),\n        value: 'actions',\n        sortable: false\n      }];\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/users/${this.itemId}`;\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/users?sort=name&order=asc`;\n    },\n    getEventName() {\n      return 'i-repositories';\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AAEA;EACAA;IAAAC;EAAA;EACAC;EACAC;IACA;MACAC;IACA;EACA;EAEAC;IACA;MACA;QACAC;QACAC;QACAC;MACA;MACAC;IACA;IAEA;MACA;QACAH;QACAC;QACAC;QACAL;MACA;MACA;IACA;IAEAO;MACA;IACA;IAEAC;MACA,QACA;QACAC;QACAC;QACAC;MACA,GACA;QACAF;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;QACAE;MACA;IACA;IAEAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["components","TeamMemberForm","mixins","data","USER_ROLES","methods","method","url","responseType","window","allowActions","getHeaders","text","value","width","sortable","getSingleItemUrl","getItemsUrl","getEventName"],"sourceRoot":"src/views/project","sources":["Team.vue"],"sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div v-if=\"items != null\">\n    <EditDialog\n      v-model=\"editDialog\"\n      :save-button-text=\"(this.itemId === 'new' ? 'Link' : $t('save'))\"\n      :title=\"$t('teamMember', {expr: this.itemId === 'new' ? $t('nnew') : $t('edit')})\"\n      @save=\"loadItems()\"\n    >\n      <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n        <TeamMemberForm\n          :project-id=\"projectId\"\n          :item-id=\"itemId\"\n          @save=\"onSave\"\n          @error=\"onError\"\n          :need-save=\"needSave\"\n          :need-reset=\"needReset\"\n        />\n      </template>\n    </EditDialog>\n\n    <YesNoDialog\n      :title=\"$t('deleteTeamMember')\"\n      :text=\"$t('askDeleteTMem')\"\n      v-model=\"deleteItemDialog\"\n      @yes=\"deleteItem(itemId)\"\n    />\n\n    <v-toolbar flat>\n      <v-app-bar-nav-icon @click=\"showDrawer()\"></v-app-bar-nav-icon>\n      <v-toolbar-title>{{ $t('team2') }}</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn\n        color=\"error\"\n        @click=\"leftProject()\"\n        class=\"mr-2\"\n        :disabled=\"userRole === 'owner'\"\n      >{{ $t('LeaveProject') }}\n      </v-btn>\n      <v-btn\n        color=\"primary\"\n        @click=\"editItem('new')\"\n        v-if=\"can(USER_PERMISSIONS.manageProjectUsers)\"\n      >{{ $t('newTeamMember') }}\n      </v-btn>\n    </v-toolbar>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      hide-default-footer\n      class=\"mt-4\"\n      :items-per-page=\"Number.MAX_VALUE\"\n    >\n      <template v-slot:item.role=\"{ item }\">\n        <v-select\n          v-model=\"item.role\"\n          :items=\"USER_ROLES\"\n          item-value=\"slug\"\n          item-text=\"title\"\n          :style=\"{width: '200px'}\"\n          @change=\"updateProjectUser(item)\"\n          v-if=\"can(USER_PERMISSIONS.manageProjectUsers)\"\n        />\n        <div v-else>{{ USER_ROLES.find(r => r.slug === item.role).title }}</div>\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n        <v-btn\n          icon\n          @click=\"askDeleteItem(item.id)\"\n          v-if=\"can(USER_PERMISSIONS.manageProjectUsers)\"\n        >\n          <v-icon>mdi-delete</v-icon>\n        </v-btn>\n      </template>\n    </v-data-table>\n  </div>\n\n</template>\n<script>\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport TeamMemberForm from '@/components/TeamMemberForm.vue';\nimport axios from 'axios';\nimport { USER_PERMISSIONS, USER_ROLES } from '@/lib/constants';\n\nexport default {\n  components: { TeamMemberForm },\n  mixins: [ItemListPageBase],\n  data() {\n    return {\n      USER_ROLES,\n    };\n  },\n\n  methods: {\n    async leftProject() {\n      await axios({\n        method: 'delete',\n        url: `/api/project/${this.projectId}/me`,\n        responseType: 'json',\n      });\n      window.location.reload();\n    },\n\n    async updateProjectUser(user) {\n      await axios({\n        method: 'put',\n        url: `/api/project/${this.projectId}/users/${user.id}`,\n        responseType: 'json',\n        data: user,\n      });\n      await this.loadItems();\n    },\n\n    allowActions() {\n      return this.can(USER_PERMISSIONS.manageProjectUsers);\n    },\n\n    getHeaders() {\n      return [\n        {\n          text: this.$i18n.t('name'),\n          value: 'name',\n          width: '50%',\n        },\n        {\n          text: this.$i18n.t('username'),\n          value: 'username',\n        },\n        {\n          text: this.$i18n.t('role'),\n          value: 'role',\n        },\n        {\n          text: this.$i18n.t('actions'),\n          value: 'actions',\n          sortable: false,\n        }];\n    },\n\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/users/${this.itemId}`;\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/users?sort=name&order=asc`;\n    },\n    getEventName() {\n      return 'i-repositories';\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}