{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst APP_PARAMS = {\n  terraform: ['plan', 'auto_approve'],\n  tofu: ['plan', 'auto_approve']\n};\nexport default {\n  props: {\n    value: Object,\n    app: String\n  },\n  methods: {\n    updateValue(prop, value) {\n      let input = {\n        ...this.value,\n        [prop]: value\n      };\n      if (APP_PARAMS[this.app]) {\n        input = (APP_PARAMS[this.app] || []).reduce((res, param) => ({\n          ...res,\n          [param]: input[param]\n        }), {});\n      }\n      this.$emit('input', input);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;EACAA;EACAC;AACA;AAEA;EACAC;IACAC;IACAC;EACA;EAEAC;IACAC;MACA;QAAA;QAAA;MAAA;MAEA;QACAC;UACA;UACA;QACA;MACA;MAEA;IACA;EACA;AACA","names":["terraform","tofu","props","value","app","methods","updateValue","input"],"sourceRoot":"src/components","sources":["TaskParamsForm.vue"],"sourcesContent":["<template>\n  <div v-if=\"app === 'ansible'\">\n    <v-row no-gutters class=\"mt-6\">\n      <v-col cols=\"12\" sm=\"6\">\n        <v-checkbox\n          class=\"mt-0\"\n          :input-value=\"value.debug\"\n          @change=\"updateValue('debug', $event)\"\n        >\n          <template v-slot:label>\n            <div class=\"text-no-wrap\">{{ $t('debug') }} <code>--vvvv</code></div>\n          </template>\n        </v-checkbox>\n      </v-col>\n      <v-col cols=\"12\" sm=\"6\">\n        <v-checkbox\n          class=\"mt-0\"\n          :input-value=\"value.dry_run\"\n          @change=\"updateValue('dry_run', $event)\"\n        >\n          <template v-slot:label>\n            <div class=\"text-no-wrap\">{{ $t('dryRun') }} <code>--check</code></div>\n          </template>\n        </v-checkbox>\n      </v-col>\n      <v-col cols=\"12\" sm=\"6\">\n        <v-checkbox\n          class=\"mt-0\"\n          :input-value=\"value.diff\"\n          @change=\"updateValue('diff', $event)\"\n        >\n          <template v-slot:label>\n            <div class=\"text-no-wrap\">{{ $t('diff') }} <code>--diff</code></div>\n          </template>\n        </v-checkbox>\n      </v-col>\n    </v-row>\n  </div>\n  <div v-else-if=\"app === 'terraform' || app === 'tofu'\">\n    <v-checkbox\n      class=\"mt-0\"\n      :input-value=\"value.plan\"\n      @change=\"updateValue('plan', $event)\"\n    >\n      <template v-slot:label>\n        <div class=\"text-no-wrap\">{{ $t('Plan') }}</div>\n      </template>\n    </v-checkbox>\n    <v-checkbox\n      class=\"mt-0\"\n      :input-value=\"value.auto_approve\"\n      @change=\"updateValue('auto_approve', $event)\"\n    >\n      <template v-slot:label>\n        <div class=\"text-no-wrap\">{{ $t('Auto Approve') }} <code>-auto-approve</code></div>\n      </template>\n    </v-checkbox>\n  </div>\n  <div v-else></div>\n</template>\n\n<style lang=\"scss\">\n\n</style>\n\n<script>\n\nconst APP_PARAMS = {\n  terraform: ['plan', 'auto_approve'],\n  tofu: ['plan', 'auto_approve'],\n};\n\nexport default {\n  props: {\n    value: Object,\n    app: String,\n  },\n\n  methods: {\n    updateValue(prop, value) {\n      let input = { ...this.value, [prop]: value };\n\n      if (APP_PARAMS[this.app]) {\n        input = (APP_PARAMS[this.app] || []).reduce((res, param) => ({\n          ...res,\n          [param]: input[param],\n        }), {});\n      }\n\n      this.$emit('input', input);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}