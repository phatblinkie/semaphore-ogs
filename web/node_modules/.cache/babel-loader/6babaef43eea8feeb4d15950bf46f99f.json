{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport IntegrationExtractorsBase from '@/components/IntegrationExtractorsBase';\nimport IntegrationMatcherForm from '@/components/IntegrationMatcherForm.vue';\nexport default {\n  mixins: [ItemListPageBase, IntegrationExtractorsBase],\n  components: {\n    IntegrationMatcherForm\n  },\n  computed: {\n    projectId() {\n      if (/^-?\\d+$/.test(this.$route.params.projectId)) {\n        return parseInt(this.$route.params.projectId, 10);\n      }\n      return this.$route.params.projectId;\n    },\n    integrationId() {\n      if (/^-?\\d+$/.test(this.$route.params.integrationId)) {\n        return parseInt(this.$route.params.integrationId, 10);\n      }\n      return this.$route.params.integrationId;\n    }\n  },\n  methods: {\n    allowActions() {\n      return true;\n    },\n    getHeaders() {\n      return [{\n        text: 'Name',\n        value: 'name',\n        sortable: true\n      }, {\n        text: 'Match Type',\n        value: 'match_type',\n        sortable: true\n      }, {\n        text: 'Method',\n        value: 'method',\n        sortable: true\n      }, {\n        text: 'Body Data Type',\n        value: 'body_data_type',\n        sortable: false\n      }, {\n        text: 'Key',\n        value: 'key',\n        sortable: true\n      }, {\n        text: 'Value',\n        value: 'value',\n        sortable: true\n      }, {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false\n      }];\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/matchers`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/matchers/${this.itemId}`;\n    },\n    getEventName() {\n      return 'w-integration-matcher';\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AAEA;AAEA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;IACAC;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["mixins","components","IntegrationMatcherForm","computed","projectId","integrationId","methods","allowActions","getHeaders","text","value","sortable","getItemsUrl","getSingleItemUrl","getEventName"],"sourceRoot":"src/views/project","sources":["IntegrationMatcher.vue"],"sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div v-if=\"items != null\">\n    <EditDialog\n      v-model=\"editDialog\"\n      :save-button-text=\"itemId === 'new' ? 'Create' : 'Save'\"\n      :title=\"`${itemId === 'new' ? 'New' : 'Edit'} Matcher`\"\n      :max-width=\"450\"\n      :transition=\"false\"\n      @save=\"loadItems\"\n    >\n      <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n        <IntegrationMatcherForm\n          :integration-id=\"integrationId\"\n          :item-id=\"itemId\"\n          @save=\"onSave\"\n          @error=\"onError\"\n          :need-save=\"needSave\"\n          :need-reset=\"needReset\"\n        />\n      </template>\n    </EditDialog>\n\n    <ObjectRefsDialog\n      object-title=\"matcher\"\n      :object-refs=\"itemRefs\"\n      :integration-id=\"integrationId\"\n      v-model=\"itemRefsDialog\"\n    />\n\n    <YesNoDialog\n      title=\"Delete Integration Matcher\"\n      text=\"Are you sure you want to delete this Integration Matcher?\"\n      v-model=\"deleteItemDialog\"\n      @yes=\"deleteItem(itemId)\"\n    />\n\n    <v-toolbar flat >\n      <v-app-bar-nav-icon @click=\"showDrawer()\"></v-app-bar-nav-icon>\n      <v-toolbar-title>Matcher</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn\n        color=\"primary\"\n        @click=\"editItem('new')\"\n      >New Matcher</v-btn>\n    </v-toolbar>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      class=\"mt-4\"\n      :items-per-page=\"Number.MAX_VALUE\"\n      >\n      <template v-slot:item.name=\"{ item }\">\n        {{ item.name }}\n      </template>\n      <template v-slot:item.match_type=\"{ item }\">\n        <code>{{ item.match_type }}</code>\n      </template>\n      <template v-slot:item.method=\"{ item }\">\n        <code>{{ item.method }}</code>\n      </template>\n      <template v-slot:item.body_data_type=\"{ item }\">\n        {{ item.body_data_type || \"N/A\" }}\n      </template>\n      <template v-slot:item.key=\"{ item }\">\n        <code>{{ item.key }}</code>\n      </template>\n      <template v-slot:item.value=\"{ item }\">\n        <code>{{ item.value }}</code>\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n        <div style=\"white-space: nowrap\">\n          <v-btn\n            icon\n            class=\"mr-1\"\n            @click=\"askDeleteItem(item.id)\"\n          >\n            <v-icon>mdi-delete</v-icon>\n          </v-btn>\n\n          <v-btn\n            icon\n            class=\"mr-1\"\n            @click=\"editItem(item.id)\"\n          >\n            <v-icon>mdi-pencil</v-icon>\n          </v-btn>\n        </div>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n<script>\nimport ItemListPageBase from '@/components/ItemListPageBase';\n\nimport IntegrationExtractorsBase from '@/components/IntegrationExtractorsBase';\n\nimport IntegrationMatcherForm from '@/components/IntegrationMatcherForm.vue';\n\nexport default {\n  mixins: [ItemListPageBase, IntegrationExtractorsBase],\n  components: { IntegrationMatcherForm },\n  computed: {\n    projectId() {\n      if (/^-?\\d+$/.test(this.$route.params.projectId)) {\n        return parseInt(this.$route.params.projectId, 10);\n      }\n      return this.$route.params.projectId;\n    },\n    integrationId() {\n      if (/^-?\\d+$/.test(this.$route.params.integrationId)) {\n        return parseInt(this.$route.params.integrationId, 10);\n      }\n      return this.$route.params.integrationId;\n    },\n  },\n  methods: {\n    allowActions() {\n      return true;\n    },\n    getHeaders() {\n      return [{\n        text: 'Name',\n        value: 'name',\n        sortable: true,\n      },\n      {\n        text: 'Match Type',\n        value: 'match_type',\n        sortable: true,\n      },\n      {\n        text: 'Method',\n        value: 'method',\n        sortable: true,\n      },\n      {\n        text: 'Body Data Type',\n        value: 'body_data_type',\n        sortable: false,\n      },\n      {\n        text: 'Key',\n        value: 'key',\n        sortable: true,\n      },\n      {\n        text: 'Value',\n        value: 'value',\n        sortable: true,\n      },\n      {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false,\n      }];\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/matchers`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/matchers/${this.itemId}`;\n    },\n    getEventName() {\n      return 'w-integration-matcher';\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}