{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ItemFormBase from '@/components/ItemFormBase';\nexport default {\n  mixins: [ItemFormBase],\n  data() {\n    return {\n      showLoginPassword: false,\n      showSSHPassphrase: false,\n      inventoryTypes: [{\n        id: 'ssh',\n        name: `${this.$t('keyFormSshKey')}`\n      }, {\n        id: 'login_password',\n        name: `${this.$t('keyFormLoginPassword')}`\n      }, {\n        id: 'none',\n        name: `${this.$t('keyFormNone')}`\n      }]\n    };\n  },\n  computed: {\n    canEditSecrets() {\n      return this.isNew || this.item.override_secret;\n    }\n  },\n  methods: {\n    getNewItem() {\n      return {\n        ssh: {},\n        login_password: {}\n      };\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/keys`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/keys/${this.itemId}`;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;QACAD;QACAC;MACA;QACAD;QACAC;MACA;IACA;EACA;EAEAC;IACAC;MACA;IACA;EACA;EAEAC;IACAC;MACA;QACAC;QACAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;EACA;AACA","names":["mixins","data","showLoginPassword","showSSHPassphrase","inventoryTypes","id","name","computed","canEditSecrets","methods","getNewItem","ssh","login_password","getItemsUrl","getSingleItemUrl"],"sourceRoot":"src/components","sources":["KeyForm.vue"],"sourcesContent":["<template>\n  <v-form\n      ref=\"form\"\n      lazy-validation\n      v-model=\"formValid\"\n      v-if=\"item != null\"\n  >\n    <v-alert\n        :value=\"formError\"\n        color=\"error\"\n        class=\"pb-2\"\n    >{{ formError }}\n    </v-alert>\n\n    <v-text-field\n        v-model=\"item.name\"\n        :label=\"$t('keyName')\"\n        :rules=\"[v => !!v || $t('name_required')]\"\n        required\n        :disabled=\"formSaving\"\n    />\n\n    <v-select\n        v-model=\"item.type\"\n        :label=\"$t('type')\"\n        :rules=\"[v => (!!v || !canEditSecrets) || $t('type_required')]\"\n        :items=\"inventoryTypes\"\n        item-value=\"id\"\n        item-text=\"name\"\n        :required=\"canEditSecrets\"\n        :disabled=\"formSaving || !canEditSecrets\"\n    />\n\n    <v-text-field\n        v-model=\"item.login_password.login\"\n        :label=\"$t('loginOptional')\"\n        v-if=\"item.type === 'login_password'\"\n        :disabled=\"formSaving || !canEditSecrets\"\n    />\n\n    <v-text-field\n        v-model=\"item.login_password.password\"\n        :append-icon=\"showLoginPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n        :label=\"$t('password')\"\n        :rules=\"[v => (!!v || !canEditSecrets) || $t('password_required')]\"\n        :type=\"showLoginPassword ? 'text' : 'password'\"\n        v-if=\"item.type === 'login_password'\"\n        :required=\"canEditSecrets\"\n        :disabled=\"formSaving || !canEditSecrets\"\n        autocomplete=\"new-password\"\n        @click:append=\"showLoginPassword = !showLoginPassword\"\n    />\n\n    <v-text-field\n      v-model=\"item.ssh.login\"\n      :label=\"$t('usernameOptional')\"\n      v-if=\"item.type === 'ssh'\"\n      :disabled=\"formSaving || !canEditSecrets\"\n    />\n\n    <v-text-field\n      v-model=\"item.ssh.passphrase\"\n      :append-icon=\"showSSHPassphrase ? 'mdi-eye' : 'mdi-eye-off'\"\n      label=\"Passphrase (Optional)\"\n      :type=\"showSSHPassphrase ? 'text' : 'password'\"\n      v-if=\"item.type === 'ssh'\"\n      :disabled=\"formSaving || !canEditSecrets\"\n      @click:append=\"showSSHPassphrase = !showSSHPassphrase\"\n    />\n\n    <v-textarea\n      outlined\n      v-model=\"item.ssh.private_key\"\n      :label=\"$t('privateKey')\"\n      :disabled=\"formSaving || !canEditSecrets\"\n      :rules=\"[v => !canEditSecrets || !!v || $t('private_key_required')]\"\n      v-if=\"item.type === 'ssh'\"\n    />\n\n    <v-checkbox\n        v-model=\"item.override_secret\"\n        :label=\"$t('override')\"\n        v-if=\"!isNew\"\n    />\n\n    <v-alert\n        dense\n        text\n        type=\"info\"\n        v-if=\"item.type === 'none'\"\n    >\n      {{ $t('useThisTypeOfKeyForHttpsRepositoriesAndForPlaybook') }}\n    </v-alert>\n  </v-form>\n</template>\n<script>\nimport ItemFormBase from '@/components/ItemFormBase';\n\nexport default {\n  mixins: [ItemFormBase],\n  data() {\n    return {\n      showLoginPassword: false,\n      showSSHPassphrase: false,\n      inventoryTypes: [{\n        id: 'ssh',\n        name: `${this.$t('keyFormSshKey')}`,\n      }, {\n        id: 'login_password',\n        name: `${this.$t('keyFormLoginPassword')}`,\n      }, {\n        id: 'none',\n        name: `${this.$t('keyFormNone')}`,\n      }],\n    };\n  },\n\n  computed: {\n    canEditSecrets() {\n      return this.isNew || this.item.override_secret;\n    },\n  },\n\n  methods: {\n    getNewItem() {\n      return {\n        ssh: {},\n        login_password: {},\n      };\n    },\n\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/keys`;\n    },\n\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/keys/${this.itemId}`;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}