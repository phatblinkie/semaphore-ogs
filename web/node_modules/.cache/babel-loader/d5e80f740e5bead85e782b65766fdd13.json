{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport InventoryForm from '@/components/InventoryForm.vue';\nimport TerraformInventoryForm from '@/components/TerraformInventoryForm.vue';\nimport { APP_INVENTORY_TITLE } from '@/lib/constants';\nimport AppsMixin from '@/components/AppsMixin';\nexport default {\n  computed: {\n    APP_INVENTORY_TITLE() {\n      return APP_INVENTORY_TITLE;\n    }\n  },\n  mixins: [ItemListPageBase, AppsMixin],\n  components: {\n    TerraformInventoryForm,\n    InventoryForm\n  },\n  data() {\n    return {\n      apps: ['ansible', 'terraform', 'tofu'],\n      itemApp: ''\n    };\n  },\n  methods: {\n    getAppByType(type) {\n      switch (type) {\n        case 'tofu-workspace':\n          return 'tofu';\n        case 'terraform-workspace':\n          return 'terraform';\n        case '':\n        case 'ansible':\n          return 'ansible';\n        default:\n          return 'ansible';\n      }\n    },\n    getHeaders() {\n      return [{\n        text: this.$i18n.t('name'),\n        value: 'name',\n        width: '33.33%'\n      }, {\n        text: this.$i18n.t('type'),\n        value: 'type',\n        width: '33.33%'\n      }, {\n        text: this.$i18n.t('path'),\n        value: 'inventory',\n        width: '33.33%'\n      }, {\n        text: this.$i18n.t('actions'),\n        value: 'actions',\n        sortable: false\n      }];\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/inventory`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/inventory/${this.itemId}`;\n    },\n    getEventName() {\n      return 'i-inventory';\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACAC;MACA;IACA;EACA;EACAC;EACAC;IAAAC;IAAAC;EAAA;EAEAC;IACA;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;QACA;UACA;QACA;UACA;QACA;QACA;UACA;QACA;UACA;MACA;IACA;IAEAC;MACA;QACAC;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAE;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["computed","APP_INVENTORY_TITLE","mixins","components","TerraformInventoryForm","InventoryForm","data","apps","itemApp","methods","getAppByType","getHeaders","text","value","width","sortable","getItemsUrl","getSingleItemUrl","getEventName"],"sourceRoot":"src/views/project","sources":["Inventory.vue"],"sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div v-if=\"items != null\">\n    <EditDialog\n      v-model=\"editDialog\"\n      :save-button-text=\"itemId === 'new' ? $t('create') : $t('save')\"\n      :icon=\"getAppIcon(itemApp)\"\n      :icon-color=\"getAppColor(itemApp)\"\n      :title=\"`${itemId === 'new' ? $t('nnew') : $t('edit')} ${APP_INVENTORY_TITLE[itemApp]}`\"\n      :max-width=\"450\"\n      @save=\"loadItems\"\n    >\n      <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n        <TerraformInventoryForm\n          v-if=\"['terraform', 'tofu'].includes(itemApp)\"\n          :project-id=\"projectId\"\n          :item-id=\"itemId\"\n          @save=\"onSave\"\n          @error=\"onError\"\n          :need-save=\"needSave\"\n          :need-reset=\"needReset\"\n        />\n        <InventoryForm\n          v-else\n          :project-id=\"projectId\"\n          :item-id=\"itemId\"\n          @save=\"onSave\"\n          @error=\"onError\"\n          :need-save=\"needSave\"\n          :need-reset=\"needReset\"\n        />\n      </template>\n    </EditDialog>\n\n    <ObjectRefsDialog\n      object-title=\"inventory\"\n      :object-refs=\"itemRefs\"\n      :project-id=\"projectId\"\n      v-model=\"itemRefsDialog\"\n    />\n\n    <YesNoDialog\n      :title=\"$t('deleteInventory')\"\n      :text=\"$t('askDeleteInv')\"\n      v-model=\"deleteItemDialog\"\n      @yes=\"deleteItem(itemId)\"\n    />\n\n    <v-toolbar flat>\n      <v-app-bar-nav-icon @click=\"showDrawer()\"></v-app-bar-nav-icon>\n      <v-toolbar-title>{{ $t('inventory') }}</v-toolbar-title>\n      <v-spacer></v-spacer>\n\n      <v-menu\n        offset-y\n      >\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn\n            class=\"pr-2\"\n            v-bind=\"attrs\"\n            v-on=\"on\"\n            color=\"primary\"\n            v-if=\"can(USER_PERMISSIONS.manageProjectResources)\"\n          >{{ $t('newInventory') }}\n            <v-icon>mdi-chevron-down</v-icon>\n          </v-btn>\n        </template>\n        <v-list>\n          <v-list-item\n            v-for=\"item in apps\"\n            :key=\"item\"\n            link\n            @click=\"itemApp = item; editItem('new');\"\n          >\n            <v-list-item-icon>\n              <v-icon\n                :color=\"getAppColor(item)\"\n              >{{ getAppIcon(item) }}\n              </v-icon>\n            </v-list-item-icon>\n            <v-list-item-title>{{ APP_INVENTORY_TITLE[item] }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n\n    </v-toolbar>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      hide-default-footer\n      class=\"mt-4\"\n      :items-per-page=\"Number.MAX_VALUE\"\n    >\n      <template v-slot:item.name=\"{ item }\">\n        <v-icon class=\"mr-3\" small>\n          {{ getAppIcon(getAppByType(item.type)) }}\n        </v-icon>\n\n        {{ item.name }}\n      </template>\n\n      <template v-slot:item.type=\"{ item }\">\n        <code>{{ item.type }}</code>\n      </template>\n      <template v-slot:item.inventory=\"{ item }\">\n        {{ ['file', 'terraform-workspace'].includes(item.type) ? item.inventory : '&mdash;' }}\n      </template>\n      <template v-slot:item.actions=\"{ item }\">\n        <div style=\"white-space: nowrap\">\n          <v-btn\n            icon\n            class=\"mr-1\"\n            @click=\"askDeleteItem(item.id)\"\n          >\n            <v-icon>mdi-delete</v-icon>\n          </v-btn>\n\n          <v-btn\n            icon\n            class=\"mr-1\"\n            @click=\"itemApp = getAppByType(item.type); editItem(item.id)\"\n          >\n            <v-icon>mdi-pencil</v-icon>\n          </v-btn>\n        </div>\n      </template>\n    </v-data-table>\n  </div>\n\n</template>\n<script>\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport InventoryForm from '@/components/InventoryForm.vue';\nimport TerraformInventoryForm from '@/components/TerraformInventoryForm.vue';\nimport { APP_INVENTORY_TITLE } from '@/lib/constants';\nimport AppsMixin from '@/components/AppsMixin';\n\nexport default {\n  computed: {\n    APP_INVENTORY_TITLE() {\n      return APP_INVENTORY_TITLE;\n    },\n  },\n  mixins: [ItemListPageBase, AppsMixin],\n  components: { TerraformInventoryForm, InventoryForm },\n\n  data() {\n    return {\n      apps: ['ansible', 'terraform', 'tofu'],\n      itemApp: '',\n    };\n  },\n\n  methods: {\n    getAppByType(type) {\n      switch (type) {\n        case 'tofu-workspace':\n          return 'tofu';\n        case 'terraform-workspace':\n          return 'terraform';\n        case '':\n        case 'ansible':\n          return 'ansible';\n        default:\n          return 'ansible';\n      }\n    },\n\n    getHeaders() {\n      return [{\n        text: this.$i18n.t('name'),\n        value: 'name',\n        width: '33.33%',\n      },\n      {\n        text: this.$i18n.t('type'),\n        value: 'type',\n        width: '33.33%',\n      },\n      {\n        text: this.$i18n.t('path'),\n        value: 'inventory',\n        width: '33.33%',\n      },\n      {\n        text: this.$i18n.t('actions'),\n        value: 'actions',\n        sortable: false,\n      }];\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/inventory`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/inventory/${this.itemId}`;\n    },\n    getEventName() {\n      return 'i-inventory';\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}