{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ItemFormBase from '@/components/ItemFormBase';\nimport IntegrationExtractorChildValueFormBase from './IntegrationExtractorChildValueFormBase';\nimport { EXTRACT_VALUE_TYPE_ICONS, EXTRACT_VALUE_TYPE_TITLES } from '../lib/constants';\nexport default {\n  mixins: [ItemFormBase, IntegrationExtractorChildValueFormBase],\n  data() {\n    return {\n      EXTRACT_VALUE_TYPE_ICONS,\n      EXTRACT_VALUE_TYPE_TITLES,\n      valueSources: [{\n        id: 'body',\n        text: 'Body'\n      }, {\n        id: 'header',\n        text: 'Header'\n      }],\n      bodyDataTypes: [{\n        id: 'json',\n        text: 'JSON'\n      }, {\n        id: 'string',\n        text: 'String'\n      }]\n    };\n  },\n  computed: {\n    projectId() {\n      if (/^-?\\d+$/.test(this.$route.params.projectId)) {\n        return parseInt(this.$route.params.projectId, 10);\n      }\n      return this.$route.params.projectId;\n    },\n    integrationId() {\n      if (/^-?\\d+$/.test(this.$route.params.integrationId)) {\n        return parseInt(this.$route.params.integrationId, 10);\n      }\n      return this.$route.params.integrationId;\n    }\n  },\n  methods: {\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/values`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/values/${this.itemId}`;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AAEA;EACAA;EAEAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;QACAD;QACAC;MACA;MACAC;QACAF;QACAC;MACA;QACAD;QACAC;MACA;IACA;EACA;EACAE;IACAC;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["mixins","data","EXTRACT_VALUE_TYPE_ICONS","EXTRACT_VALUE_TYPE_TITLES","valueSources","id","text","bodyDataTypes","computed","projectId","integrationId","methods","getItemsUrl","getSingleItemUrl"],"sourceRoot":"src/components","sources":["IntegrationExtractValueForm.vue"],"sourcesContent":["<template>\n<v-form\n  ref=\"form\"\n  lazy-validation\n  v-model=\"formValid\"\n  >\n  <v-alert\n    :value=\"formError\"\n    color=\"error\"\n    class=\"pb-2\"\n    >{{ formError }}</v-alert>\n\n  <v-text-field\n    v-model=\"item.name\"\n    label=\"Name\"\n    :rules=\"[v => !!v || 'Name is required']\"\n    required\n    :disabled=\"formSaving\"\n    ></v-text-field>\n  <v-row>\n    <v-col cols=\"12\" md=\"12\" class=\"pb-0\">\n      <div class=\"ml-4 mr-4 mt-6\">\n        <v-select v-model=\"item.value_source\"\n                  label=\"Source of the Value\"\n                  :items=\"valueSources\"\n                  item-value=\"id\"\n                  item-text=\"text\"\n                  :rules=\"[v => !!v || 'Value Source is required']\"\n                  outlined\n                  dense\n                  required\n                  :disabled=\"formSaving\">\n        </v-select>\n        <v-select v-model=\"item.body_data_type\"\n                  label=\"Data Type of Body\"\n                  v-if=\"item.value_source == 'body'\"\n                  :items=\"bodyDataTypes\"\n                  item-value=\"id\"\n                  item-text=\"text\"\n                  :rules=\"[v => !!v || 'Body Data Type is required']\"\n                  outlined\n                  dense\n                  required\n                  :disabled=\"formSaving\">\n        </v-select>\n        <v-text-field\n          v-model=\"item.key\"\n          label=\"Key *\"\n          :rules=\"[v => !!v || 'Key is required']\"\n          outlined\n          dense\n          required\n          :disabled=\"formSaving\"\n          ></v-text-field>\n        <v-text-field\n          v-model=\"item.variable\"\n          label=\"Variable *\"\n          :rules=\"[v => !!v || 'Variable is required']\"\n          outlined\n          dense\n          required\n          :disabled=\"formSaving\"\n          ></v-text-field>\n      </div>\n\n    </v-col>\n  </v-row>\n</v-form>\n</template>\n<script>\nimport ItemFormBase from '@/components/ItemFormBase';\nimport IntegrationExtractorChildValueFormBase from './IntegrationExtractorChildValueFormBase';\nimport { EXTRACT_VALUE_TYPE_ICONS, EXTRACT_VALUE_TYPE_TITLES } from '../lib/constants';\n\nexport default {\n  mixins: [ItemFormBase, IntegrationExtractorChildValueFormBase],\n\n  data() {\n    return {\n      EXTRACT_VALUE_TYPE_ICONS,\n      EXTRACT_VALUE_TYPE_TITLES,\n      valueSources: [{\n        id: 'body',\n        text: 'Body',\n      }, {\n        id: 'header',\n        text: 'Header',\n      }],\n      bodyDataTypes: [{\n        id: 'json',\n        text: 'JSON',\n      }, {\n        id: 'string',\n        text: 'String',\n      }],\n    };\n  },\n  computed: {\n    projectId() {\n      if (/^-?\\d+$/.test(this.$route.params.projectId)) {\n        return parseInt(this.$route.params.projectId, 10);\n      }\n      return this.$route.params.projectId;\n    },\n    integrationId() {\n      if (/^-?\\d+$/.test(this.$route.params.integrationId)) {\n        return parseInt(this.$route.params.integrationId, 10);\n      }\n      return this.$route.params.integrationId;\n    },\n  },\n  methods: {\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/values`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/integrations/${this.integrationId}/values/${this.itemId}`;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}