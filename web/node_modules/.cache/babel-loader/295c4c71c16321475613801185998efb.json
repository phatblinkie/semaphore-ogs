{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport EventBus from '@/event-bus';\nimport TaskStatus from '@/components/TaskStatus.vue';\nimport TaskLink from '@/components/TaskLink.vue';\nimport socket from '@/socket';\nimport { TEMPLATE_TYPE_ICONS } from '@/lib/constants';\nimport AppsMixin from '@/components/AppsMixin';\nexport default {\n  mixins: [ItemListPageBase, AppsMixin],\n  data() {\n    return {\n      TEMPLATE_TYPE_ICONS\n    };\n  },\n  components: {\n    TaskStatus,\n    TaskLink\n  },\n  watch: {\n    async projectId() {\n      await this.loadItems();\n    }\n  },\n  created() {\n    socket.addListener(data => this.onWebsocketDataReceived(data));\n  },\n  methods: {\n    showTaskLog(taskId) {\n      EventBus.$emit('i-show-task', {\n        taskId\n      });\n    },\n    async onWebsocketDataReceived(data) {\n      if (data.project_id !== this.projectId || data.type !== 'update') {\n        return;\n      }\n      if (!this.items.some(item => item.id === data.task_id)) {\n        await this.loadItems();\n      }\n      const task = this.items.find(item => item.id === data.task_id);\n      Object.assign(task, {\n        ...data,\n        type: undefined\n      });\n    },\n    getHeaders() {\n      return [{\n        text: this.$i18n.t('task2'),\n        value: 'tpl_alias',\n        sortable: false\n      }, {\n        text: this.$i18n.t('version'),\n        value: 'version',\n        sortable: false\n      }, {\n        text: this.$i18n.t('status'),\n        value: 'status',\n        sortable: false\n      }, {\n        text: this.$i18n.t('user'),\n        value: 'user_name',\n        sortable: false\n      }, {\n        text: this.$i18n.t('start'),\n        value: 'start',\n        sortable: false\n      }, {\n        text: this.$i18n.t('duration'),\n        value: 'end',\n        sortable: false\n      }];\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/tasks/last`;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EAEAC;IACA;MAAAC;IAAA;EACA;EAEAC;IAAAC;IAAAC;EAAA;EAEAC;IACA;MACA;IACA;EACA;EAEAC;IACAC;EACA;EAEAC;IACAC;MACAC;QACAC;MACA;IACA;IAEA;MACA;QACA;MACA;MAEA;QACA;MACA;MAEA;MAEAC;QACA;QACAC;MACA;IACA;IAEAC;MACA,QACA;QACAC;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,EACA;IACA;IAEAC;MACA;IACA;EACA;AACA","names":["mixins","data","TEMPLATE_TYPE_ICONS","components","TaskStatus","TaskLink","watch","created","socket","methods","showTaskLog","EventBus","taskId","Object","type","getHeaders","text","value","sortable","getItemsUrl"],"sourceRoot":"src/views/project","sources":["History.vue"],"sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div v-if=\"items != null\">\n    <v-toolbar flat >\n      <v-app-bar-nav-icon @click=\"showDrawer()\"></v-app-bar-nav-icon>\n      <v-toolbar-title>\n        {{ $t('dashboard2') }}\n      </v-toolbar-title>\n    </v-toolbar>\n\n    <v-tabs show-arrows class=\"pl-4\">\n      <v-tab\n        v-if=\"projectType === ''\"\n        key=\"history\"\n        :to=\"`/project/${projectId}/history`\"\n      >{{ $t('history') }}</v-tab>\n      <v-tab key=\"activity\" :to=\"`/project/${projectId}/activity`\">{{ $t('activity') }}</v-tab>\n      <v-tab\n        v-if=\"can(USER_PERMISSIONS.updateProject)\"\n        key=\"settings\"\n        :to=\"`/project/${projectId}/settings`\"\n      >{{ $t('settings') }}\n      </v-tab>\n    </v-tabs>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      :footer-props=\"{ itemsPerPageOptions: [20] }\"\n      class=\"mt-4\"\n    >\n      <template v-slot:item.tpl_alias=\"{ item }\">\n        <div class=\"d-flex\">\n          <v-icon\n              class=\"mr-3\"\n              small\n          >\n            {{ getAppIcon(item.tpl_app) }}\n          </v-icon>\n\n          <v-icon class=\"mr-3\" small>\n            {{ TEMPLATE_TYPE_ICONS[item.tpl_type] }}\n          </v-icon>\n\n          <TaskLink\n            :task-id=\"item.id\"\n            :tooltip=\"item.message\"\n            :label=\"'#' + item.id\"\n          />\n\n          <v-icon small class=\"ml-1 mr-1\">mdi-arrow-left</v-icon>\n\n          <router-link :to=\"\n            '/project/' + item.project_id +\n            '/templates/' + item.template_id\"\n          >{{ item.tpl_alias }}\n          </router-link>\n        </div>\n      </template>\n\n      <template v-slot:item.version=\"{ item }\">\n        <TaskLink\n          :disabled=\"item.tpl_type === 'build'\"\n          class=\"ml-2\"\n          v-if=\"item.tpl_type !== ''\"\n          :status=\"item.status\"\n\n          :task-id=\"item.tpl_type === 'build'\n              ? item.id\n              : (item.build_task || {}).id\"\n\n          :label=\"item.tpl_type === 'build'\n              ? item.version\n              : (item.build_task || {}).version\"\n\n          :tooltip=\"item.tpl_type === 'build'\n              ? item.message\n              : (item.build_task || {}).message\"\n        />\n        <div class=\"ml-2\" v-else>&mdash;</div>\n      </template>\n\n      <template v-slot:item.status=\"{ item }\">\n        <TaskStatus :status=\"item.status\"/>\n      </template>\n\n      <template v-slot:item.start=\"{ item }\">\n        {{ item.start | formatDate }}\n      </template>\n\n      <template v-slot:item.end=\"{ item }\">\n        {{ [item.start, item.end] | formatMilliseconds }}\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport EventBus from '@/event-bus';\nimport TaskStatus from '@/components/TaskStatus.vue';\nimport TaskLink from '@/components/TaskLink.vue';\nimport socket from '@/socket';\nimport { TEMPLATE_TYPE_ICONS } from '@/lib/constants';\nimport AppsMixin from '@/components/AppsMixin';\n\nexport default {\n  mixins: [ItemListPageBase, AppsMixin],\n\n  data() {\n    return { TEMPLATE_TYPE_ICONS };\n  },\n\n  components: { TaskStatus, TaskLink },\n\n  watch: {\n    async projectId() {\n      await this.loadItems();\n    },\n  },\n\n  created() {\n    socket.addListener((data) => this.onWebsocketDataReceived(data));\n  },\n\n  methods: {\n    showTaskLog(taskId) {\n      EventBus.$emit('i-show-task', {\n        taskId,\n      });\n    },\n\n    async onWebsocketDataReceived(data) {\n      if (data.project_id !== this.projectId || data.type !== 'update') {\n        return;\n      }\n\n      if (!this.items.some((item) => item.id === data.task_id)) {\n        await this.loadItems();\n      }\n\n      const task = this.items.find((item) => item.id === data.task_id);\n\n      Object.assign(task, {\n        ...data,\n        type: undefined,\n      });\n    },\n\n    getHeaders() {\n      return [\n        {\n          text: this.$i18n.t('task2'),\n          value: 'tpl_alias',\n          sortable: false,\n        },\n        {\n          text: this.$i18n.t('version'),\n          value: 'version',\n          sortable: false,\n        },\n        {\n          text: this.$i18n.t('status'),\n          value: 'status',\n          sortable: false,\n        },\n        {\n          text: this.$i18n.t('user'),\n          value: 'user_name',\n          sortable: false,\n        },\n        {\n          text: this.$i18n.t('start'),\n          value: 'start',\n          sortable: false,\n        },\n        {\n          text: this.$i18n.t('duration'),\n          value: 'end',\n          sortable: false,\n        },\n      ];\n    },\n\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/tasks/last`;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}