{"ast":null,"code":"import Vue from 'vue';\nimport moment from 'moment';\nimport axios from 'axios';\nimport Convert from 'ansi-to-html';\nimport App from './App.vue';\nimport router from './router';\nimport vuetify from './plugins/vuetify';\nimport './assets/scss/main.scss';\nimport i18n from './plugins/i18';\nconst convert = new Convert();\naxios.defaults.baseURL = document.baseURI;\nVue.config.productionTip = false;\nVue.filter('formatDate', value => {\n  if (!value) {\n    return '—';\n  }\n  const date = moment(value);\n  const now = moment();\n  if (now.isSame(date, 'day')) {\n    return `${date.fromNow()} (${date.format('LT')})`; // Display only time if today\n  }\n  return date.format('L LT'); // Display only date otherwise\n});\nVue.filter('formatTime', value => value ? moment(String(value)).format('LTS') : '—');\nVue.filter('formatLog', value => value ? convert.toHtml(String(value)) : value);\nVue.filter('formatMilliseconds', value => {\n  if (value == null || value === '') {\n    return '—';\n  }\n  let duration;\n  if (typeof value === 'string') {\n    duration = parseInt(value, 10);\n  } else if (typeof value === 'number') {\n    duration = value;\n  } else if (Array.isArray(value)) {\n    if (value.length !== 2) {\n      throw new Error('formatMilliseconds: invalid value format');\n    }\n    if (value[0] == null || value[0] === '') {\n      return '—';\n    }\n    const start = typeof value[0] === 'string' ? new Date(value[0]) : value[0];\n    let end;\n    if (value[1] == null || value[1] === '') {\n      end = Date.now();\n    } else {\n      end = typeof value[1] === 'string' ? new Date(value[1]) : value[1];\n    }\n    duration = end - start;\n  }\n  return moment.duration(duration, 'milliseconds').humanize();\n});\nnew Vue({\n  router,\n  vuetify,\n  i18n,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","moment","axios","Convert","App","router","vuetify","i18n","convert","defaults","baseURL","document","baseURI","config","productionTip","filter","value","date","now","isSame","fromNow","format","String","toHtml","duration","parseInt","Array","isArray","length","Error","start","Date","end","humanize","render","h","$mount"],"sources":["/home/admin/repos/semaphore-ogs/web/src/main.js"],"sourcesContent":["import Vue from 'vue';\nimport moment from 'moment';\nimport axios from 'axios';\nimport Convert from 'ansi-to-html';\nimport App from './App.vue';\nimport router from './router';\nimport vuetify from './plugins/vuetify';\nimport './assets/scss/main.scss';\nimport i18n from './plugins/i18';\n\nconst convert = new Convert();\n\naxios.defaults.baseURL = document.baseURI;\nVue.config.productionTip = false;\n\nVue.filter('formatDate', (value) => {\n  if (!value) {\n    return '—';\n  }\n  const date = moment(value);\n  const now = moment();\n\n  if (now.isSame(date, 'day')) {\n    return `${date.fromNow()} (${date.format('LT')})`; // Display only time if today\n  }\n  return date.format('L LT'); // Display only date otherwise\n});\nVue.filter('formatTime', (value) => (value ? moment(String(value)).format('LTS') : '—'));\nVue.filter('formatLog', (value) => (value ? convert.toHtml(String(value)) : value));\n\nVue.filter('formatMilliseconds', (value) => {\n  if (value == null || value === '') {\n    return '—';\n  }\n\n  let duration;\n  if (typeof value === 'string') {\n    duration = parseInt(value, 10);\n  } else if (typeof value === 'number') {\n    duration = value;\n  } else if (Array.isArray(value)) {\n    if (value.length !== 2) {\n      throw new Error('formatMilliseconds: invalid value format');\n    }\n\n    if (value[0] == null || value[0] === '') {\n      return '—';\n    }\n    const start = typeof value[0] === 'string' ? new Date(value[0]) : value[0];\n    let end;\n\n    if (value[1] == null || value[1] === '') {\n      end = Date.now();\n    } else {\n      end = typeof value[1] === 'string' ? new Date(value[1]) : value[1];\n    }\n\n    duration = end - start;\n  }\n  return moment.duration(duration, 'milliseconds').humanize();\n});\n\nnew Vue({\n  router,\n  vuetify,\n  i18n,\n  render: (h) => h(App),\n}).$mount('#app');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}