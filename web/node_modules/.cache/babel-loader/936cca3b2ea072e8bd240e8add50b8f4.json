{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    vars: Array\n  },\n  watch: {\n    vars(val) {\n      this.var = val || [];\n    }\n  },\n  created() {\n    this.modifiedVars = (this.vars || []).map(v => ({\n      name: v\n    }));\n  },\n  data() {\n    return {\n      editDialog: null,\n      editedVar: null,\n      editedValues: [],\n      editedVarIndex: null,\n      modifiedVars: null,\n      formError: null\n    };\n  },\n  methods: {\n    addEditedVarValue() {\n      this.editedValues.push({\n        name: '',\n        value: ''\n      });\n    },\n    editVar(index) {\n      this.editedVar = index != null ? {\n        ...this.modifiedVars[index]\n      } : {};\n      this.editedValues = [];\n      this.editedValues.push(...(this.editedVar.values || []));\n      this.editedVar.values = this.editedValues;\n      this.editedVarIndex = index;\n      if (this.$refs.form) {\n        this.$refs.form.resetValidation();\n      }\n      this.editDialog = true;\n    },\n    saveVar() {\n      this.formError = null;\n      if (!this.$refs.form.validate()) {\n        return;\n      }\n      this.editedVar.values = [];\n      if (this.editedVarIndex != null) {\n        this.modifiedVars[this.editedVarIndex] = this.editedVar;\n      } else {\n        this.modifiedVars.push(this.editedVar);\n      }\n      this.editDialog = false;\n      this.editedVar = null;\n      this.$emit('change', this.modifiedVars.map(x => x.name));\n    },\n    deleteVar(index) {\n      this.modifiedVars.splice(index, 1);\n      this.$emit('change', this.modifiedVars.map(x => x.name));\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;EACAA;IACAC;EACA;EACAC;IACAD;MACA;IACA;EACA;EAEAE;IACA;MAAAC;IAAA;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACAT;QACAU;MACA;IACA;IAEAC;MACA;QAAA;MAAA;MAEA;MACA;MACA;MAEA;MAEA;QACA;MACA;MAEA;IACA;IAEAC;MACA;MAEA;QACA;MACA;MAEA;MAEA;QACA;MACA;QACA;MACA;MAEA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;EACA;AACA","names":["props","vars","watch","created","name","data","editDialog","editedVar","editedValues","editedVarIndex","modifiedVars","formError","methods","addEditedVarValue","value","editVar","saveVar","deleteVar"],"sourceRoot":"src/components","sources":["ArgsPicker.vue"],"sourcesContent":["<template>\n  <div class=\"pb-4\">\n    <v-dialog\n      v-model=\"editDialog\"\n      hide-overlay\n      width=\"300\"\n    >\n      <v-card :color=\"$vuetify.theme.dark ? '#212121' : 'white'\">\n        <v-card-title></v-card-title>\n        <v-card-text class=\"pb-0\">\n          <v-form\n            ref=\"form\"\n            lazy-validation\n            v-if=\"editedVar != null\"\n          >\n            <v-alert\n              :value=\"formError\"\n              color=\"error\"\n            >{{ formError }}\n            </v-alert>\n\n            <v-text-field\n              :label=\"$t('arg')\"\n              v-model.trim=\"editedVar.name\"\n              :rules=\"[(v) => !!v || $t('arg_required')]\"\n              required\n            />\n\n            <div class=\"text-right mt-2\">\n\n              <v-btn\n                color=\"primary\"\n                v-if=\"editedVar.type === 'enum'\"\n                @click=\"addEditedVarValue()\"\n              >Add Value</v-btn>\n            </div>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"editDialog = false\"\n          >\n            {{ $t('cancel') }}\n          </v-btn>\n          <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"saveVar()\"\n          >\n            {{ editedVarIndex == null ? $t('add') : $t('save') }}\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <fieldset style=\"padding: 0 10px 2px 10px;\n                     border: 1px solid rgba(0, 0, 0, 0.38);\n                     border-radius: 4px;\n                     font-size: 12px;\"\n              :style=\"{\n                       'border-color': $vuetify.theme.dark ?\n                         'rgba(200, 200, 200, 0.38)' :\n                         'rgba(0, 0, 0, 0.38)'\n                     }\">\n      <legend style=\"padding: 0 3px;\">{{ $t('Args') }}</legend>\n      <v-chip-group column style=\"margin-top: -4px;\">\n        <v-chip\n          v-for=\"(v, i) in modifiedVars\"\n          close\n          @click:close=\"deleteVar(i)\"\n          :key=\"v.name\"\n          @click=\"editVar(i)\"\n        >\n          {{ v.name }}\n        </v-chip>\n        <v-chip @click=\"editVar(null)\">\n          + <span class=\"ml-1\" v-if=\"modifiedVars.length === 0\">{{ $t('Add Arg') }}</span>\n        </v-chip>\n      </v-chip-group>\n    </fieldset>\n  </div>\n</template>\n<style lang=\"scss\">\n\n</style>\n<script>\nexport default {\n  props: {\n    vars: Array,\n  },\n  watch: {\n    vars(val) {\n      this.var = val || [];\n    },\n  },\n\n  created() {\n    this.modifiedVars = (this.vars || []).map((v) => ({ name: v }));\n  },\n\n  data() {\n    return {\n      editDialog: null,\n      editedVar: null,\n      editedValues: [],\n      editedVarIndex: null,\n      modifiedVars: null,\n      formError: null,\n    };\n  },\n  methods: {\n    addEditedVarValue() {\n      this.editedValues.push({\n        name: '',\n        value: '',\n      });\n    },\n\n    editVar(index) {\n      this.editedVar = index != null ? { ...this.modifiedVars[index] } : {};\n\n      this.editedValues = [];\n      this.editedValues.push(...(this.editedVar.values || []));\n      this.editedVar.values = this.editedValues;\n\n      this.editedVarIndex = index;\n\n      if (this.$refs.form) {\n        this.$refs.form.resetValidation();\n      }\n\n      this.editDialog = true;\n    },\n\n    saveVar() {\n      this.formError = null;\n\n      if (!this.$refs.form.validate()) {\n        return;\n      }\n\n      this.editedVar.values = [];\n\n      if (this.editedVarIndex != null) {\n        this.modifiedVars[this.editedVarIndex] = this.editedVar;\n      } else {\n        this.modifiedVars.push(this.editedVar);\n      }\n\n      this.editDialog = false;\n      this.editedVar = null;\n      this.$emit('change', this.modifiedVars.map((x) => x.name));\n    },\n\n    deleteVar(index) {\n      this.modifiedVars.splice(index, 1);\n      this.$emit('change', this.modifiedVars.map((x) => x.name));\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}