{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport ScheduleForm from '@/components/ScheduleForm.vue';\nimport TaskList from '@/components/TaskList.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    TaskList,\n    ScheduleForm\n  },\n  mixins: [ItemListPageBase],\n  data() {\n    return {\n      openedItems: []\n    };\n  },\n  methods: {\n    async setActive(scheduleId, active) {\n      await axios({\n        method: 'put',\n        url: `/api/project/${this.projectId}/schedules/${scheduleId}/active`,\n        responseType: 'json',\n        data: {\n          active\n        }\n      });\n    },\n    getHeaders() {\n      return [{\n        text: '',\n        value: 'active',\n        sortable: false\n      }, {\n        text: this.$i18n.t('Name'),\n        value: 'name'\n      }, {\n        text: this.$i18n.t('Cron'),\n        value: 'cron_format'\n      }, {\n        text: this.$i18n.t('Template'),\n        value: 'tpl_name',\n        width: '100%'\n      }, {\n        text: this.$i18n.t('actions'),\n        value: 'actions',\n        sortable: false\n      }];\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/schedules`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/schedules/${this.itemId}`;\n    },\n    getEventName() {\n      return 'i-schedule';\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;EAAA;EACAC;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;MACA;QACAC;QACAC;QACAC;QACAL;UACAM;QACA;MACA;IACA;IAEAC;MACA;QACAC;QACAC;QACAC;MACA;QACAF;QACAC;MACA;QACAD;QACAC;MACA;QACAD;QACAC;QACAE;MACA;QACAH;QACAC;QACAC;MACA;IACA;IACAE;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["components","TaskList","ScheduleForm","mixins","data","openedItems","methods","method","url","responseType","active","getHeaders","text","value","sortable","width","getItemsUrl","getSingleItemUrl","getEventName"],"sourceRoot":"src/views/project","sources":["Schedule.vue"],"sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div v-if=\"items != null\">\n    <EditDialog\n      v-model=\"editDialog\"\n      :save-button-text=\"$t('save')\"\n      :title=\"$t('Edit Schedule')\"\n      :max-width=\"500\"\n      @save=\"loadItems\"\n    >\n      <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n        <ScheduleForm\n          :project-id=\"projectId\"\n          :item-id=\"itemId\"\n          @save=\"onSave\"\n          @error=\"onError\"\n          :need-save=\"needSave\"\n          :need-reset=\"needReset\"\n        />\n      </template>\n    </EditDialog>\n\n    <ObjectRefsDialog\n      object-title=\"schedule\"\n      :object-refs=\"itemRefs\"\n      :project-id=\"projectId\"\n      v-model=\"itemRefsDialog\"\n    />\n\n    <YesNoDialog\n      :title=\"$t('Delete Schedule')\"\n      :text=\"$t('askDeleteEnv')\"\n      v-model=\"deleteItemDialog\"\n      @yes=\"deleteItem(itemId)\"\n    />\n\n    <v-toolbar flat >\n      <v-app-bar-nav-icon @click=\"showDrawer()\"></v-app-bar-nav-icon>\n      <v-toolbar-title>{{ $t('Schedule') }}</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn\n        color=\"primary\"\n        @click=\"editItem('new')\"\n        v-if=\"can(USER_PERMISSIONS.manageProjectResources)\"\n      >{{ $t('New Schedule') }}\n      </v-btn>\n    </v-toolbar>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"items\"\n      hide-default-footer\n      class=\"mt-4\"\n      :items-per-page=\"Number.MAX_VALUE\"\n    >\n      <template v-slot:item.active=\"{ item }\">\n        <v-switch\n          v-model=\"item.active\"\n          inset\n          @change=\"setActive(item.id, item.active)\"\n        ></v-switch>\n      </template>\n\n      <template v-slot:item.name=\"{ item }\">\n        <div>{{ item.name || '&mdash;' }}</div>\n      </template>\n\n      <template v-slot:item.tpl_name=\"{ item }\">\n        <div class=\"d-flex\">\n          <router-link :to=\"\n            '/project/' + item.project_id +\n            '/templates/' + item.template_id\"\n          >{{ item.tpl_name }}\n          </router-link>\n        </div>\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n        <div style=\"white-space: nowrap\">\n          <v-btn\n            icon\n            class=\"mr-1\"\n            @click=\"askDeleteItem(item.id)\"\n          >\n            <v-icon>mdi-delete</v-icon>\n          </v-btn>\n\n          <v-btn\n            icon\n            class=\"mr-1\"\n            @click=\"editItem(item.id)\"\n          >\n            <v-icon>mdi-pencil</v-icon>\n          </v-btn>\n        </div>\n      </template>\n\n      <template v-slot:expanded-item=\"{ headers, item }\">\n        <td\n          :colspan=\"headers.length\"\n          v-if=\"openedItems.some((template) => template.id === item.id)\"\n        >\n          <TaskList\n            style=\"border: 1px solid lightgray; border-radius: 6px; margin: 10px 0;\"\n            :template=\"item\"\n            :limit=\"5\"\n            :hide-footer=\"true\"\n          />\n        </td>\n      </template>\n    </v-data-table>\n  </div>\n\n</template>\n<script>\nimport ItemListPageBase from '@/components/ItemListPageBase';\nimport ScheduleForm from '@/components/ScheduleForm.vue';\nimport TaskList from '@/components/TaskList.vue';\nimport axios from 'axios';\n\nexport default {\n  components: { TaskList, ScheduleForm },\n  mixins: [ItemListPageBase],\n  data() {\n    return {\n      openedItems: [],\n    };\n  },\n  methods: {\n    async setActive(scheduleId, active) {\n      await axios({\n        method: 'put',\n        url: `/api/project/${this.projectId}/schedules/${scheduleId}/active`,\n        responseType: 'json',\n        data: {\n          active,\n        },\n      });\n    },\n\n    getHeaders() {\n      return [{\n        text: '',\n        value: 'active',\n        sortable: false,\n      }, {\n        text: this.$i18n.t('Name'),\n        value: 'name',\n      }, {\n        text: this.$i18n.t('Cron'),\n        value: 'cron_format',\n      }, {\n        text: this.$i18n.t('Template'),\n        value: 'tpl_name',\n        width: '100%',\n      }, {\n        text: this.$i18n.t('actions'),\n        value: 'actions',\n        sortable: false,\n      }];\n    },\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/schedules`;\n    },\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/schedules/${this.itemId}`;\n    },\n    getEventName() {\n      return 'i-schedule';\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}