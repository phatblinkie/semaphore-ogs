{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TemplateForm from './TemplateForm.vue';\nimport EditDialog from './EditDialog.vue';\nimport AppsMixin from './AppsMixin';\nconst ANSIBLE_FIELDS = {\n  playbook: {\n    label: 'playbookFilename'\n  },\n  inventory: {\n    label: 'inventory2'\n  },\n  repository: {\n    label: 'repository'\n  },\n  environment: {\n    label: 'environment3'\n  },\n  vault: {\n    label: 'vaultPassword2'\n  }\n};\nconst TERRAFORM_FIELDS = {\n  ...ANSIBLE_FIELDS,\n  playbook: {\n    label: 'Subdirectory path (Optional)',\n    optional: true\n  },\n  inventory: {\n    label: 'Default Workspace'\n  },\n  vault: undefined\n};\nconst UNKNOWN_APP_FIELDS = {\n  ...ANSIBLE_FIELDS,\n  playbook: {\n    label: 'Script Filename *'\n  },\n  inventory: undefined,\n  vault: undefined\n};\nconst APP_FIELDS = {\n  '': ANSIBLE_FIELDS,\n  ansible: ANSIBLE_FIELDS,\n  terraform: TERRAFORM_FIELDS,\n  tofu: TERRAFORM_FIELDS\n};\nexport default {\n  components: {\n    TemplateForm,\n    EditDialog\n  },\n  mixins: [AppsMixin],\n  props: {\n    value: Boolean,\n    itemApp: String,\n    projectId: Number,\n    itemId: [String, Number],\n    sourceItemId: Number\n  },\n  data() {\n    return {\n      dialog: false\n    };\n  },\n  computed: {\n    fields() {\n      return APP_FIELDS[this.itemApp] || UNKNOWN_APP_FIELDS;\n    }\n  },\n  watch: {\n    async dialog(val) {\n      this.$emit('input', val);\n    },\n    async value(val) {\n      this.dialog = val;\n    }\n  },\n  methods: {\n    onSave(e) {\n      this.$emit('save', e);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AAEA;EACAA;IACAC;EACA;EACAC;IACAD;EACA;EACAE;IACAF;EACA;EACAG;IACAH;EACA;EACAI;IACAJ;EACA;AACA;AAEA;EACA;EACAD;IACAC;IACAK;EACA;EACAJ;IACAD;EACA;EACAI;AACA;AAEA;EACA;EACAL;IACAC;EACA;EACAC;EACAG;AACA;AAEA;EACA;EACAE;EACAC;EACAC;AACA;AAEA;EACAC;IACAC;IACAC;EACA;EAEAC;EAEAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EAEAC;IACA;MACAC;IACA;EACA;EAEAC;IACAC;MACA;IACA;EACA;EAEAC;IACA;MACA;IACA;IAEA;MACA;IACA;EACA;EAEAC;IACAC;MACA;IACA;EACA;AAEA","names":["playbook","label","inventory","repository","environment","vault","optional","ansible","terraform","tofu","components","TemplateForm","EditDialog","mixins","props","value","itemApp","projectId","itemId","sourceItemId","data","dialog","computed","fields","watch","methods","onSave"],"sourceRoot":"src/components","sources":["EditTemplateDialog.vue"],"sourcesContent":["<template>\n  <EditDialog\n      v-if=\"isAppsLoaded\"\n      :max-width=\"700\"\n      :min-content-height=\"457\"\n      v-model=\"dialog\"\n      :save-button-text=\"itemId === 'new' ? $t('create') : $t('save')\"\n      :icon=\"getAppIcon(itemApp)\"\n      :icon-color=\"getAppColor(itemApp)\"\n      :title=\"(itemId === 'new' ? $t('newTemplate') : $t('editTemplate')) +\n        ' \\'' + getAppTitle(itemApp) + '\\''\"\n      @save=\"onSave\"\n  >\n    <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n      <TemplateForm\n          :project-id=\"projectId\"\n          :item-id=\"itemId\"\n          @save=\"onSave\"\n          @error=\"onError\"\n          :need-save=\"needSave\"\n          :need-reset=\"needReset\"\n          :source-item-id=\"sourceItemId\"\n          :app=\"itemApp\"\n          :fields=\"fields\"\n      />\n    </template>\n  </EditDialog>\n</template>\n\n<style scoped lang=\"scss\">\n\n</style>\n\n<script>\n\nimport TemplateForm from './TemplateForm.vue';\nimport EditDialog from './EditDialog.vue';\nimport AppsMixin from './AppsMixin';\n\nconst ANSIBLE_FIELDS = {\n  playbook: {\n    label: 'playbookFilename',\n  },\n  inventory: {\n    label: 'inventory2',\n  },\n  repository: {\n    label: 'repository',\n  },\n  environment: {\n    label: 'environment3',\n  },\n  vault: {\n    label: 'vaultPassword2',\n  },\n};\n\nconst TERRAFORM_FIELDS = {\n  ...ANSIBLE_FIELDS,\n  playbook: {\n    label: 'Subdirectory path (Optional)',\n    optional: true,\n  },\n  inventory: {\n    label: 'Default Workspace',\n  },\n  vault: undefined,\n};\n\nconst UNKNOWN_APP_FIELDS = {\n  ...ANSIBLE_FIELDS,\n  playbook: {\n    label: 'Script Filename *',\n  },\n  inventory: undefined,\n  vault: undefined,\n};\n\nconst APP_FIELDS = {\n  '': ANSIBLE_FIELDS,\n  ansible: ANSIBLE_FIELDS,\n  terraform: TERRAFORM_FIELDS,\n  tofu: TERRAFORM_FIELDS,\n};\n\nexport default {\n  components: {\n    TemplateForm,\n    EditDialog,\n  },\n\n  mixins: [AppsMixin],\n\n  props: {\n    value: Boolean,\n    itemApp: String,\n    projectId: Number,\n    itemId: [String, Number],\n    sourceItemId: Number,\n  },\n\n  data() {\n    return {\n      dialog: false,\n    };\n  },\n\n  computed: {\n    fields() {\n      return APP_FIELDS[this.itemApp] || UNKNOWN_APP_FIELDS;\n    },\n  },\n\n  watch: {\n    async dialog(val) {\n      this.$emit('input', val);\n    },\n\n    async value(val) {\n      this.dialog = val;\n    },\n  },\n\n  methods: {\n    onSave(e) {\n      this.$emit('save', e);\n    },\n  },\n\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}