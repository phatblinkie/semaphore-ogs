{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport IntegrationExtractorsBase from '@/components/IntegrationExtractorsBase';\nimport IntegrationsBase from '@/views/project/IntegrationsBase';\nimport copyToClipboard from '@/lib/copyToClipboard';\nimport axios from 'axios';\nimport IntegrationExtractValue from './IntegrationExtractValue.vue';\nimport IntegrationMatcher from './IntegrationMatcher.vue';\nimport IntegrationExtractorCrumb from './IntegrationExtractorCrumb.vue';\nexport default {\n  mixins: [IntegrationExtractorsBase, IntegrationsBase],\n  components: {\n    IntegrationMatcher,\n    IntegrationExtractValue,\n    IntegrationExtractorCrumb\n  },\n  data() {\n    return {\n      integration: null\n    };\n  },\n  async created() {\n    this.integration = (await axios({\n      method: 'get',\n      url: `/api/project/${this.projectId}/integrations/${this.integrationId}`,\n      responseType: 'json'\n    })).data;\n  },\n  methods: {\n    copyToClipboard,\n    allowActions() {\n      return true;\n    },\n    async updateIntegration() {\n      await axios({\n        method: 'put',\n        url: `/api/project/${this.projectId}/integrations/${this.integrationId}`,\n        responseType: 'json',\n        data: this.integration\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;IAAAC;IAAAC;EAAA;EAEAC;IACA;MACAC;IACA;EACA;EAEA;IACA;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;IACAC;MACA;IACA;IACA;MACA;QACAL;QACAC;QACAC;QACAJ;MACA;IACA;EACA;AACA","names":["mixins","components","IntegrationMatcher","IntegrationExtractValue","IntegrationExtractorCrumb","data","integration","method","url","responseType","methods","copyToClipboard","allowActions"],"sourceRoot":"src/views/project","sources":["IntegrationExtractor.vue"],"sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div>\n    <IntegrationExtractorCrumb v-if=\"integration != null\" :integration=\"integration\"/>\n\n    <div class=\"px-4 py-3\">\n      <div v-for=\"alias of (aliases || [])\" :key=\"alias.id\">\n        <code class=\"mr-2\">{{ alias.url }}</code>\n        <v-btn icon\n               @click=\"copyToClipboard(\n                 alias.url, 'The alias URL  has been copied to the clipboard.')\">\n          <v-icon>mdi-content-copy</v-icon>\n        </v-btn>\n        <v-btn icon @click=\"deleteAlias(alias.id)\">\n          <v-icon>mdi-delete</v-icon>\n        </v-btn>\n      </div>\n\n      <v-btn color=\"primary\" @click=\"addAlias()\" :disabled=\"aliases == null\">\n        {{ aliases == null ? 'Loading aliases...' : 'Add Alias' }}\n      </v-btn>\n\n      <v-checkbox\n        v-model=\"integration.searchable\"\n        label=\"Available by project and global alias\"\n        @change=\"updateIntegration()\"\n      />\n    </div>\n\n    <IntegrationExtractValue/>\n    <IntegrationMatcher/>\n  </div>\n</template>\n<script>\nimport IntegrationExtractorsBase from '@/components/IntegrationExtractorsBase';\nimport IntegrationsBase from '@/views/project/IntegrationsBase';\nimport copyToClipboard from '@/lib/copyToClipboard';\nimport axios from 'axios';\nimport IntegrationExtractValue from './IntegrationExtractValue.vue';\nimport IntegrationMatcher from './IntegrationMatcher.vue';\nimport IntegrationExtractorCrumb from './IntegrationExtractorCrumb.vue';\n\nexport default {\n  mixins: [IntegrationExtractorsBase, IntegrationsBase],\n  components: { IntegrationMatcher, IntegrationExtractValue, IntegrationExtractorCrumb },\n\n  data() {\n    return {\n      integration: null,\n    };\n  },\n\n  async created() {\n    this.integration = (await axios({\n      method: 'get',\n      url: `/api/project/${this.projectId}/integrations/${this.integrationId}`,\n      responseType: 'json',\n    })).data;\n  },\n\n  methods: {\n    copyToClipboard,\n    allowActions() {\n      return true;\n    },\n    async updateIntegration() {\n      await axios({\n        method: 'put',\n        url: `/api/project/${this.projectId}/integrations/${this.integrationId}`,\n        responseType: 'json',\n        data: this.integration,\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}