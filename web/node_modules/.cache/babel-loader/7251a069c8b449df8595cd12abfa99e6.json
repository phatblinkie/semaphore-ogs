{"ast":null,"code":"export default {\n  'Check interval': 'Check interval',\n  Schedule: 'Schedule',\n  backup: 'Backup',\n  downloadTheProjectBackupFile: 'Download the project backup file (in json)',\n  restoreProject: 'Restore Project...',\n  incorrectUsrPwd: 'Incorrect login or password',\n  askDeleteUser: 'Do you really want to delete this user?',\n  askDeleteTemp: 'Do you really want to delete this template?',\n  askDeleteEnv: 'Do you really want to delete this environment?',\n  askDeleteInv: 'Do you really want to delete this inventor?',\n  askDeleteKey: 'Do you really want to delete this key?',\n  askDeleteRepo: 'Do you really want to delete this repository?',\n  askDeleteProj: 'Do you really want to delete this project?',\n  askDeleteTMem: 'Do you really want to delete this team member?',\n  edit: 'Edit',\n  nnew: 'New',\n  keyFormSshKey: 'SSH Key',\n  keyFormLoginPassword: 'Login with password',\n  keyFormNone: 'None',\n  incorrectUrl: 'Incorrect URL',\n  username: 'Username',\n  username_required: 'Username is required',\n  dashboard: 'Dashboard',\n  systemstatus: 'System Status',\n  history: 'History',\n  activity: 'Activity',\n  settings: 'Settings',\n  signIn: 'Sign In',\n  password: 'Password',\n  changePassword: 'Change password',\n  editUser: 'Edit User',\n  newProject: 'New Project',\n  close: 'Close',\n  newProject2: 'New project...',\n  demoMode: 'DEMO MODE',\n  task: 'Task #{expr}',\n  youCanRunAnyTasks: 'You can run any tasks',\n  youHaveReadonlyAccess: 'You have read-only access',\n  taskTemplates: 'Task Templates',\n  inventory: 'Inventory',\n  environment: 'Environment',\n  keyStore: 'Key Store',\n  repositories: 'Repositories',\n  darkMode: 'Dark Mode',\n  team: 'Team',\n  users: 'Users',\n  editAccount: 'Edit Account',\n  signOut: 'Sign Out',\n  error: 'Error',\n  refreshPage: 'Refresh Page',\n  relogin: 'Relogin',\n  howToFixSigninIssues: 'How to fix sign-in issues',\n  firstlyYouNeedAccessToTheServerWhereSemaphoreRunni: 'Firstly, you need access to the server where Semaphore running.',\n  executeTheFollowingCommandOnTheServerToSeeExisting: 'Execute the following command on the server to see existing users:',\n  semaphoreUserList: 'semaphore user list',\n  youCanChangePasswordOfExistingUser: 'You can change password of existing user:',\n  semaphoreUserChangebyloginLoginUser123Password: 'semaphore user change-by-login --login user123 --password {makePasswordExample}',\n  orCreateNewAdminUser: 'Or create new admin user:',\n  close2: 'Close',\n  semaphore: 'SEMAPHORE',\n  dontHaveAccountOrCantSignIn: 'Don\\'t have account or can\\'t sign in?',\n  password2: 'Password',\n  cancel: 'Cancel',\n  noViews: 'No views',\n  addView: 'Add view',\n  editEnvironment: 'Edit Environment',\n  deleteEnvironment: 'Delete environment',\n  environment2: 'Environment',\n  newEnvironment: 'New Environment',\n  environmentName: 'Environment Name',\n  extraVariables: 'Extra variables',\n  enterExtraVariablesJson: 'Enter extra variables JSON...',\n  environmentVariables: 'Environment variables',\n  enterEnvJson: 'Enter env JSON...',\n  environmentAndExtraVariablesMustBeValidJsonExample: 'Environment and extra variables must be valid JSON. Example:',\n  dashboard2: 'Dashboard',\n  ansibleSemaphore: 'Semaphore UI',\n  wereSorryButHtmlwebpackpluginoptionstitleDoesntWor: 'We\\'re sorry but <%= htmlWebpackPlugin.options.title %> doesn\\'t work properly without JavaScript enabled. Please enable it to continue.',\n  deleteInventory: 'Delete inventory',\n  newInventory: 'New Inventory',\n  name: 'Name',\n  userCredentials: 'User Credentials',\n  sudoCredentialsOptional: 'Sudo Credentials (Optional)',\n  type: 'Type',\n  pathToInventoryFile: 'Path to Inventory file',\n  enterInventory: 'Enter inventory...',\n  staticInventoryExample: 'Static inventory example:',\n  staticYamlInventoryExample: 'Static YAML inventory example:',\n  keyName: 'Key Name',\n  loginOptional: 'Login (Optional)',\n  usernameOptional: 'Username (Optional)',\n  privateKey: 'Private Key',\n  override: 'Override',\n  useThisTypeOfKeyForHttpsRepositoriesAndForPlaybook: 'Use this type of key for HTTPS repositories and for playbooks which use non-SSH connections.',\n  deleteKey: 'Delete key',\n  newKey: 'New Key',\n  create: 'Create',\n  newTask: 'New Task',\n  cantDeleteThe: 'Can\\'t delete the {objectTitle}',\n  theCantBeDeletedBecauseItUsedByTheResourcesBelow: 'The {objectTitle} can\\'t be deleted because it used by the resources below',\n  projectName: 'Project Name',\n  allowAlertsForThisProject: 'Allow alerts for this project',\n  telegramChatIdOptional: 'Telegram Chat ID (Optional)',\n  maxNumberOfParallelTasksOptional: 'Max number of parallel tasks (Optional)',\n  deleteRepository: 'Delete repository',\n  newRepository: 'New Repository',\n  urlOrPath: 'URL or path',\n  absPath: 'abs. path',\n  branch: 'Branch',\n  accessKey: 'Access Key',\n  credentialsToAccessToTheGitRepositoryItShouldBe: 'Credentials to access to the Git repository. It should be:',\n  ifYouUseGitOrSshUrl: 'if you use Git or SSH URL.',\n  ifYouUseHttpsOrFileUrl: 'if you use HTTPS or file URL.',\n  none: 'None',\n  ssh: 'SSH',\n  deleteProject: 'Delete project',\n  save: 'Save',\n  deleteProject2: 'Delete Project',\n  onceYouDeleteAProjectThereIsNoGoingBackPleaseBeCer: 'Once you delete a project, there is no going back. Please be certain.',\n  name2: 'Name *',\n  title: 'Title *',\n  description: 'Description',\n  required: 'Required',\n  key: '{expr}',\n  surveyVariables: 'Survey Variables',\n  addVariable: 'Add variable',\n  columns: 'Columns',\n  buildVersion: 'Build Version',\n  messageOptional: 'Message (Optional)',\n  debug: 'Debug',\n  dryRun: 'Dry Run',\n  diff: 'Diff',\n  advanced: 'Advanced',\n  hide: 'Hide',\n  pleaseAllowOverridingCliArgumentInTaskTemplateSett: 'To allow overriding CLI argument in Task Template settings',\n  cliArgsJsonArrayExampleIMyinventoryshPrivatekeythe: 'CLI Args (JSON array). Example: [ \"-i\", \"@myinventory.sh\", \"--private-key=/there/id_rsa\", \"-vvvv\" ]',\n  started: 'Started',\n  author: 'Author',\n  duration: 'Duration',\n  stop: 'Stop',\n  forceStop: 'Force Stop',\n  confirmTask: 'Confirm',\n  deleteTeamMember: 'Delete team member',\n  team2: 'Team',\n  newTeamMember: 'New Team Member',\n  user: 'User',\n  administrator: 'Administrator',\n  definesStartVersionOfYourArtifactEachRunIncrements: 'Defines start version of your artifact. Each run increments the artifact version.',\n  forMoreInformationAboutBuildingSeeThe: 'For more information about building, see the',\n  taskTemplateReference: 'Task Template reference',\n  definesWhatArtifactShouldBeDeployedWhenTheTaskRun: 'Defines what artifact should be deployed when the task run.',\n  forMoreInformationAboutDeployingSeeThe: 'For more information about deploying, see the',\n  taskTemplateReference2: 'Task Template reference',\n  definesAutorunSchedule: 'Defines autorun schedule.',\n  forMoreInformationAboutCronSeeThe: 'For more information about cron, see the',\n  cronExpressionFormatReference: 'Cron expression format reference',\n  startVersion: 'Start Version',\n  example000: 'Example: 0.0.0',\n  buildTemplate: 'Build Template',\n  autorun: 'Autorun',\n  playbookFilename: 'Playbook Filename *',\n  exampleSiteyml: 'Example: site.yml',\n  inventory2: 'Inventory *',\n  repository: 'Repository',\n  environment3: 'Environment *',\n  vaultPassword: 'Vault Password',\n  vaultPassword2: 'Vault Password',\n  view: 'View',\n  cron: 'Cron',\n  iWantToRunATaskByTheCronOnlyForForNewCommitsOfSome: 'I want to run a task by the cron only for for new commits of some repository',\n  repository2: 'Repository',\n  cronChecksNewCommitBeforeRun: 'Cron checks new commit before run',\n  readThe: 'Read the',\n  toLearnMoreAboutCron: 'to learn more about Cron.',\n  suppressSuccessAlerts: 'Suppress success alerts',\n  cliArgsJsonArrayExampleIMyinventoryshPrivatekeythe2: 'CLI Args (JSON array). Example: [ \"-i\", \"@myinventory.sh\", \"--private-key=/there/id_rsa\", \"-vvvv\" ]',\n  allowCliArgsInTask: 'Allow CLI args in Task',\n  docs: 'docs',\n  editViews: 'Edit Views',\n  newTemplate: 'New template',\n  taskTemplates2: 'Task Templates',\n  all: 'All',\n  notLaunched: 'Not launched',\n  by: 'by {user_name}',\n  editTemplate: 'Edit Template',\n  newTemplate2: 'New Template',\n  deleteTemplate: 'Delete template',\n  playbook: 'Playbook',\n  email: 'Email',\n  adminUser: 'Admin user',\n  sendAlerts: 'Send alerts',\n  deleteUser: 'Delete user',\n  newUser: 'New User',\n  re: 'Re{getActionButtonTitle}',\n  teamMember: '{expr} Team Member',\n  taskId: 'Task ID',\n  version: 'Version',\n  status: 'Status',\n  start: 'Start',\n  actions: 'Actions',\n  alert: 'Alert',\n  admin: 'Admin',\n  role: 'Role',\n  external: 'External',\n  time: 'Time',\n  path: 'Path',\n  gitUrl: 'Git URL',\n  sshKey: 'SSH Key',\n  lastTask: 'Last Task',\n  task2: 'Task',\n  build: 'Build',\n  deploy: 'Deploy',\n  run: 'Run',\n  add: 'Add',\n  password_required: 'Password is required',\n  name_required: 'Name is required',\n  user_credentials_required: 'User credentials are required',\n  type_required: 'Type is required',\n  path_required: 'Path to Inventory file is required',\n  private_key_required: 'Private key is required',\n  project_name_required: 'Project name is required',\n  repository_required: 'Repository is required',\n  branch_required: 'Branch is required',\n  key_required: 'Key is required',\n  user_required: 'User is required',\n  build_version_required: 'Build version is required',\n  title_required: 'Title is required',\n  isRequired: 'is required',\n  mustBeInteger: 'Must be integer',\n  mustBe0OrGreater: 'Must be 0 or greater',\n  start_version_required: 'Start version is required',\n  playbook_filename_required: 'Playbook filename is required',\n  inventory_required: 'Inventory is required',\n  environment_required: 'Environment is required',\n  email_required: 'Email is required',\n  build_template_required: 'Build template is required',\n  Task: 'Task',\n  Build: 'Build',\n  Deploy: 'Deploy',\n  Run: 'Run',\n  CreateDemoProject: 'Create Demo Project',\n  LeaveProject: 'Leave Project',\n  integration: 'Integration',\n  integrations: 'Integrations',\n  NewIntegration: 'New Integration',\n  EditIntegration: 'Edit Integration',\n  DeleteIntegration: 'Delete Integration',\n  DeleteIntegrationMsg: 'Are you sure you want to delete this Integration?',\n  AddAlias: 'Add Alias',\n  LoadAlias: 'Loading aliases...'\n};","map":{"version":3,"names":["Schedule","backup","downloadTheProjectBackupFile","restoreProject","incorrectUsrPwd","askDeleteUser","askDeleteTemp","askDeleteEnv","askDeleteInv","askDeleteKey","askDeleteRepo","askDeleteProj","askDeleteTMem","edit","nnew","keyFormSshKey","keyFormLoginPassword","keyFormNone","incorrectUrl","username","username_required","dashboard","systemstatus","history","activity","settings","signIn","password","changePassword","editUser","newProject","close","newProject2","demoMode","task","youCanRunAnyTasks","youHaveReadonlyAccess","taskTemplates","inventory","environment","keyStore","repositories","darkMode","team","users","editAccount","signOut","error","refreshPage","relogin","howToFixSigninIssues","firstlyYouNeedAccessToTheServerWhereSemaphoreRunni","executeTheFollowingCommandOnTheServerToSeeExisting","semaphoreUserList","youCanChangePasswordOfExistingUser","semaphoreUserChangebyloginLoginUser123Password","orCreateNewAdminUser","close2","semaphore","dontHaveAccountOrCantSignIn","password2","cancel","noViews","addView","editEnvironment","deleteEnvironment","environment2","newEnvironment","environmentName","extraVariables","enterExtraVariablesJson","environmentVariables","enterEnvJson","environmentAndExtraVariablesMustBeValidJsonExample","dashboard2","ansibleSemaphore","wereSorryButHtmlwebpackpluginoptionstitleDoesntWor","deleteInventory","newInventory","name","userCredentials","sudoCredentialsOptional","type","pathToInventoryFile","enterInventory","staticInventoryExample","staticYamlInventoryExample","keyName","loginOptional","usernameOptional","privateKey","override","useThisTypeOfKeyForHttpsRepositoriesAndForPlaybook","deleteKey","newKey","create","newTask","cantDeleteThe","theCantBeDeletedBecauseItUsedByTheResourcesBelow","projectName","allowAlertsForThisProject","telegramChatIdOptional","maxNumberOfParallelTasksOptional","deleteRepository","newRepository","urlOrPath","absPath","branch","accessKey","credentialsToAccessToTheGitRepositoryItShouldBe","ifYouUseGitOrSshUrl","ifYouUseHttpsOrFileUrl","none","ssh","deleteProject","save","deleteProject2","onceYouDeleteAProjectThereIsNoGoingBackPleaseBeCer","name2","title","description","required","key","surveyVariables","addVariable","columns","buildVersion","messageOptional","debug","dryRun","diff","advanced","hide","pleaseAllowOverridingCliArgumentInTaskTemplateSett","cliArgsJsonArrayExampleIMyinventoryshPrivatekeythe","started","author","duration","stop","forceStop","confirmTask","deleteTeamMember","team2","newTeamMember","user","administrator","definesStartVersionOfYourArtifactEachRunIncrements","forMoreInformationAboutBuildingSeeThe","taskTemplateReference","definesWhatArtifactShouldBeDeployedWhenTheTaskRun","forMoreInformationAboutDeployingSeeThe","taskTemplateReference2","definesAutorunSchedule","forMoreInformationAboutCronSeeThe","cronExpressionFormatReference","startVersion","example000","buildTemplate","autorun","playbookFilename","exampleSiteyml","inventory2","repository","environment3","vaultPassword","vaultPassword2","view","cron","iWantToRunATaskByTheCronOnlyForForNewCommitsOfSome","repository2","cronChecksNewCommitBeforeRun","readThe","toLearnMoreAboutCron","suppressSuccessAlerts","cliArgsJsonArrayExampleIMyinventoryshPrivatekeythe2","allowCliArgsInTask","docs","editViews","newTemplate","taskTemplates2","all","notLaunched","by","editTemplate","newTemplate2","deleteTemplate","playbook","email","adminUser","sendAlerts","deleteUser","newUser","re","teamMember","taskId","version","status","start","actions","alert","admin","role","external","time","path","gitUrl","sshKey","lastTask","task2","build","deploy","run","add","password_required","name_required","user_credentials_required","type_required","path_required","private_key_required","project_name_required","repository_required","branch_required","key_required","user_required","build_version_required","title_required","isRequired","mustBeInteger","mustBe0OrGreater","start_version_required","playbook_filename_required","inventory_required","environment_required","email_required","build_template_required","Task","Build","Deploy","Run","CreateDemoProject","LeaveProject","integration","integrations","NewIntegration","EditIntegration","DeleteIntegration","DeleteIntegrationMsg","AddAlias","LoadAlias"],"sources":["/home/admin/repos/semaphore-ogs/web/src/lang/en.js"],"sourcesContent":["export default {\n  'Check interval': 'Check interval',\n  Schedule: 'Schedule',\n  backup: 'Backup',\n  downloadTheProjectBackupFile: 'Download the project backup file (in json)',\n  restoreProject: 'Restore Project...',\n  incorrectUsrPwd: 'Incorrect login or password',\n  askDeleteUser: 'Do you really want to delete this user?',\n  askDeleteTemp: 'Do you really want to delete this template?',\n  askDeleteEnv: 'Do you really want to delete this environment?',\n  askDeleteInv: 'Do you really want to delete this inventor?',\n  askDeleteKey: 'Do you really want to delete this key?',\n  askDeleteRepo: 'Do you really want to delete this repository?',\n  askDeleteProj: 'Do you really want to delete this project?',\n  askDeleteTMem: 'Do you really want to delete this team member?',\n  edit: 'Edit',\n  nnew: 'New',\n  keyFormSshKey: 'SSH Key',\n  keyFormLoginPassword: 'Login with password',\n  keyFormNone: 'None',\n  incorrectUrl: 'Incorrect URL',\n  username: 'Username',\n  username_required: 'Username is required',\n  dashboard: 'Dashboard',\n  systemstatus: 'System Status',\n  history: 'History',\n  activity: 'Activity',\n  settings: 'Settings',\n  signIn: 'Sign In',\n  password: 'Password',\n  changePassword: 'Change password',\n  editUser: 'Edit User',\n  newProject: 'New Project',\n  close: 'Close',\n  newProject2: 'New project...',\n  demoMode: 'DEMO MODE',\n  task: 'Task #{expr}',\n  youCanRunAnyTasks: 'You can run any tasks',\n  youHaveReadonlyAccess: 'You have read-only access',\n  taskTemplates: 'Task Templates',\n  inventory: 'Inventory',\n  environment: 'Environment',\n  keyStore: 'Key Store',\n  repositories: 'Repositories',\n  darkMode: 'Dark Mode',\n  team: 'Team',\n  users: 'Users',\n  editAccount: 'Edit Account',\n  signOut: 'Sign Out',\n  error: 'Error',\n  refreshPage: 'Refresh Page',\n  relogin: 'Relogin',\n  howToFixSigninIssues: 'How to fix sign-in issues',\n  firstlyYouNeedAccessToTheServerWhereSemaphoreRunni: 'Firstly, you need access to the server where Semaphore running.',\n  executeTheFollowingCommandOnTheServerToSeeExisting: 'Execute the following command on the server to see existing users:',\n  semaphoreUserList: 'semaphore user list',\n  youCanChangePasswordOfExistingUser: 'You can change password of existing user:',\n  semaphoreUserChangebyloginLoginUser123Password: 'semaphore user change-by-login --login user123 --password {makePasswordExample}',\n  orCreateNewAdminUser: 'Or create new admin user:',\n  close2: 'Close',\n  semaphore: 'SEMAPHORE',\n  dontHaveAccountOrCantSignIn: 'Don\\'t have account or can\\'t sign in?',\n  password2: 'Password',\n  cancel: 'Cancel',\n  noViews: 'No views',\n  addView: 'Add view',\n  editEnvironment: 'Edit Environment',\n  deleteEnvironment: 'Delete environment',\n  environment2: 'Environment',\n  newEnvironment: 'New Environment',\n  environmentName: 'Environment Name',\n  extraVariables: 'Extra variables',\n  enterExtraVariablesJson: 'Enter extra variables JSON...',\n  environmentVariables: 'Environment variables',\n  enterEnvJson: 'Enter env JSON...',\n  environmentAndExtraVariablesMustBeValidJsonExample: 'Environment and extra variables must be valid JSON. Example:',\n  dashboard2: 'Dashboard',\n  ansibleSemaphore: 'Semaphore UI',\n  wereSorryButHtmlwebpackpluginoptionstitleDoesntWor: 'We\\'re sorry but <%= htmlWebpackPlugin.options.title %> doesn\\'t work properly without JavaScript enabled. Please enable it to continue.',\n  deleteInventory: 'Delete inventory',\n  newInventory: 'New Inventory',\n  name: 'Name',\n  userCredentials: 'User Credentials',\n  sudoCredentialsOptional: 'Sudo Credentials (Optional)',\n  type: 'Type',\n  pathToInventoryFile: 'Path to Inventory file',\n  enterInventory: 'Enter inventory...',\n  staticInventoryExample: 'Static inventory example:',\n  staticYamlInventoryExample: 'Static YAML inventory example:',\n  keyName: 'Key Name',\n  loginOptional: 'Login (Optional)',\n  usernameOptional: 'Username (Optional)',\n  privateKey: 'Private Key',\n  override: 'Override',\n  useThisTypeOfKeyForHttpsRepositoriesAndForPlaybook: 'Use this type of key for HTTPS repositories and for playbooks which use non-SSH connections.',\n  deleteKey: 'Delete key',\n  newKey: 'New Key',\n  create: 'Create',\n  newTask: 'New Task',\n  cantDeleteThe: 'Can\\'t delete the {objectTitle}',\n  theCantBeDeletedBecauseItUsedByTheResourcesBelow: 'The {objectTitle} can\\'t be deleted because it used by the resources below',\n  projectName: 'Project Name',\n  allowAlertsForThisProject: 'Allow alerts for this project',\n  telegramChatIdOptional: 'Telegram Chat ID (Optional)',\n  maxNumberOfParallelTasksOptional: 'Max number of parallel tasks (Optional)',\n  deleteRepository: 'Delete repository',\n  newRepository: 'New Repository',\n  urlOrPath: 'URL or path',\n  absPath: 'abs. path',\n  branch: 'Branch',\n  accessKey: 'Access Key',\n  credentialsToAccessToTheGitRepositoryItShouldBe: 'Credentials to access to the Git repository. It should be:',\n  ifYouUseGitOrSshUrl: 'if you use Git or SSH URL.',\n  ifYouUseHttpsOrFileUrl: 'if you use HTTPS or file URL.',\n  none: 'None',\n  ssh: 'SSH',\n  deleteProject: 'Delete project',\n  save: 'Save',\n  deleteProject2: 'Delete Project',\n  onceYouDeleteAProjectThereIsNoGoingBackPleaseBeCer: 'Once you delete a project, there is no going back. Please be certain.',\n  name2: 'Name *',\n  title: 'Title *',\n  description: 'Description',\n  required: 'Required',\n  key: '{expr}',\n  surveyVariables: 'Survey Variables',\n  addVariable: 'Add variable',\n  columns: 'Columns',\n  buildVersion: 'Build Version',\n  messageOptional: 'Message (Optional)',\n  debug: 'Debug',\n  dryRun: 'Dry Run',\n  diff: 'Diff',\n  advanced: 'Advanced',\n  hide: 'Hide',\n  pleaseAllowOverridingCliArgumentInTaskTemplateSett: 'To allow overriding CLI argument in Task Template settings',\n  cliArgsJsonArrayExampleIMyinventoryshPrivatekeythe: 'CLI Args (JSON array). Example: [ \"-i\", \"@myinventory.sh\", \"--private-key=/there/id_rsa\", \"-vvvv\" ]',\n  started: 'Started',\n  author: 'Author',\n  duration: 'Duration',\n  stop: 'Stop',\n  forceStop: 'Force Stop',\n  confirmTask: 'Confirm',\n  deleteTeamMember: 'Delete team member',\n  team2: 'Team',\n  newTeamMember: 'New Team Member',\n  user: 'User',\n  administrator: 'Administrator',\n  definesStartVersionOfYourArtifactEachRunIncrements: 'Defines start version of your artifact. Each run increments the artifact version.',\n  forMoreInformationAboutBuildingSeeThe: 'For more information about building, see the',\n  taskTemplateReference: 'Task Template reference',\n  definesWhatArtifactShouldBeDeployedWhenTheTaskRun: 'Defines what artifact should be deployed when the task run.',\n  forMoreInformationAboutDeployingSeeThe: 'For more information about deploying, see the',\n  taskTemplateReference2: 'Task Template reference',\n  definesAutorunSchedule: 'Defines autorun schedule.',\n  forMoreInformationAboutCronSeeThe: 'For more information about cron, see the',\n  cronExpressionFormatReference: 'Cron expression format reference',\n  startVersion: 'Start Version',\n  example000: 'Example: 0.0.0',\n  buildTemplate: 'Build Template',\n  autorun: 'Autorun',\n  playbookFilename: 'Playbook Filename *',\n  exampleSiteyml: 'Example: site.yml',\n  inventory2: 'Inventory *',\n  repository: 'Repository',\n  environment3: 'Environment *',\n  vaultPassword: 'Vault Password',\n  vaultPassword2: 'Vault Password',\n  view: 'View',\n  cron: 'Cron',\n  iWantToRunATaskByTheCronOnlyForForNewCommitsOfSome: 'I want to run a task by the cron only for for new commits of some repository',\n  repository2: 'Repository',\n  cronChecksNewCommitBeforeRun: 'Cron checks new commit before run',\n  readThe: 'Read the',\n  toLearnMoreAboutCron: 'to learn more about Cron.',\n  suppressSuccessAlerts: 'Suppress success alerts',\n  cliArgsJsonArrayExampleIMyinventoryshPrivatekeythe2: 'CLI Args (JSON array). Example: [ \"-i\", \"@myinventory.sh\", \"--private-key=/there/id_rsa\", \"-vvvv\" ]',\n  allowCliArgsInTask: 'Allow CLI args in Task',\n  docs: 'docs',\n  editViews: 'Edit Views',\n  newTemplate: 'New template',\n  taskTemplates2: 'Task Templates',\n  all: 'All',\n  notLaunched: 'Not launched',\n  by: 'by {user_name}',\n  editTemplate: 'Edit Template',\n  newTemplate2: 'New Template',\n  deleteTemplate: 'Delete template',\n  playbook: 'Playbook',\n  email: 'Email',\n  adminUser: 'Admin user',\n  sendAlerts: 'Send alerts',\n  deleteUser: 'Delete user',\n  newUser: 'New User',\n  re: 'Re{getActionButtonTitle}',\n  teamMember: '{expr} Team Member',\n  taskId: 'Task ID',\n  version: 'Version',\n  status: 'Status',\n  start: 'Start',\n  actions: 'Actions',\n  alert: 'Alert',\n  admin: 'Admin',\n  role: 'Role',\n  external: 'External',\n  time: 'Time',\n  path: 'Path',\n  gitUrl: 'Git URL',\n  sshKey: 'SSH Key',\n  lastTask: 'Last Task',\n  task2: 'Task',\n  build: 'Build',\n  deploy: 'Deploy',\n  run: 'Run',\n  add: 'Add',\n  password_required: 'Password is required',\n  name_required: 'Name is required',\n  user_credentials_required: 'User credentials are required',\n  type_required: 'Type is required',\n  path_required: 'Path to Inventory file is required',\n  private_key_required: 'Private key is required',\n  project_name_required: 'Project name is required',\n  repository_required: 'Repository is required',\n  branch_required: 'Branch is required',\n  key_required: 'Key is required',\n  user_required: 'User is required',\n  build_version_required: 'Build version is required',\n  title_required: 'Title is required',\n  isRequired: 'is required',\n  mustBeInteger: 'Must be integer',\n  mustBe0OrGreater: 'Must be 0 or greater',\n  start_version_required: 'Start version is required',\n  playbook_filename_required: 'Playbook filename is required',\n  inventory_required: 'Inventory is required',\n  environment_required: 'Environment is required',\n  email_required: 'Email is required',\n  build_template_required: 'Build template is required',\n  Task: 'Task',\n  Build: 'Build',\n  Deploy: 'Deploy',\n  Run: 'Run',\n  CreateDemoProject: 'Create Demo Project',\n  LeaveProject: 'Leave Project',\n  integration: 'Integration',\n  integrations: 'Integrations',\n  NewIntegration: 'New Integration',\n  EditIntegration: 'Edit Integration',\n  DeleteIntegration: 'Delete Integration',\n  DeleteIntegrationMsg: 'Are you sure you want to delete this Integration?',\n  AddAlias: 'Add Alias',\n  LoadAlias: 'Loading aliases...',\n};\n"],"mappings":"AAAA,eAAe;EACb,gBAAgB,EAAE,gBAAgB;EAClCA,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,QAAQ;EAChBC,4BAA4B,EAAE,4CAA4C;EAC1EC,cAAc,EAAE,oBAAoB;EACpCC,eAAe,EAAE,6BAA6B;EAC9CC,aAAa,EAAE,yCAAyC;EACxDC,aAAa,EAAE,6CAA6C;EAC5DC,YAAY,EAAE,gDAAgD;EAC9DC,YAAY,EAAE,6CAA6C;EAC3DC,YAAY,EAAE,wCAAwC;EACtDC,aAAa,EAAE,+CAA+C;EAC9DC,aAAa,EAAE,4CAA4C;EAC3DC,aAAa,EAAE,gDAAgD;EAC/DC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,KAAK;EACXC,aAAa,EAAE,SAAS;EACxBC,oBAAoB,EAAE,qBAAqB;EAC3CC,WAAW,EAAE,MAAM;EACnBC,YAAY,EAAE,eAAe;EAC7BC,QAAQ,EAAE,UAAU;EACpBC,iBAAiB,EAAE,sBAAsB;EACzCC,SAAS,EAAE,WAAW;EACtBC,YAAY,EAAE,eAAe;EAC7BC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,SAAS;EACjBC,QAAQ,EAAE,UAAU;EACpBC,cAAc,EAAE,iBAAiB;EACjCC,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,aAAa;EACzBC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE,gBAAgB;EAC7BC,QAAQ,EAAE,WAAW;EACrBC,IAAI,EAAE,cAAc;EACpBC,iBAAiB,EAAE,uBAAuB;EAC1CC,qBAAqB,EAAE,2BAA2B;EAClDC,aAAa,EAAE,gBAAgB;EAC/BC,SAAS,EAAE,WAAW;EACtBC,WAAW,EAAE,aAAa;EAC1BC,QAAQ,EAAE,WAAW;EACrBC,YAAY,EAAE,cAAc;EAC5BC,QAAQ,EAAE,WAAW;EACrBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE,cAAc;EAC3BC,OAAO,EAAE,UAAU;EACnBC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE,cAAc;EAC3BC,OAAO,EAAE,SAAS;EAClBC,oBAAoB,EAAE,2BAA2B;EACjDC,kDAAkD,EAAE,iEAAiE;EACrHC,kDAAkD,EAAE,oEAAoE;EACxHC,iBAAiB,EAAE,qBAAqB;EACxCC,kCAAkC,EAAE,2CAA2C;EAC/EC,8CAA8C,EAAE,iFAAiF;EACjIC,oBAAoB,EAAE,2BAA2B;EACjDC,MAAM,EAAE,OAAO;EACfC,SAAS,EAAE,WAAW;EACtBC,2BAA2B,EAAE,wCAAwC;EACrEC,SAAS,EAAE,UAAU;EACrBC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE,UAAU;EACnBC,OAAO,EAAE,UAAU;EACnBC,eAAe,EAAE,kBAAkB;EACnCC,iBAAiB,EAAE,oBAAoB;EACvCC,YAAY,EAAE,aAAa;EAC3BC,cAAc,EAAE,iBAAiB;EACjCC,eAAe,EAAE,kBAAkB;EACnCC,cAAc,EAAE,iBAAiB;EACjCC,uBAAuB,EAAE,+BAA+B;EACxDC,oBAAoB,EAAE,uBAAuB;EAC7CC,YAAY,EAAE,mBAAmB;EACjCC,kDAAkD,EAAE,8DAA8D;EAClHC,UAAU,EAAE,WAAW;EACvBC,gBAAgB,EAAE,cAAc;EAChCC,kDAAkD,EAAE,0IAA0I;EAC9LC,eAAe,EAAE,kBAAkB;EACnCC,YAAY,EAAE,eAAe;EAC7BC,IAAI,EAAE,MAAM;EACZC,eAAe,EAAE,kBAAkB;EACnCC,uBAAuB,EAAE,6BAA6B;EACtDC,IAAI,EAAE,MAAM;EACZC,mBAAmB,EAAE,wBAAwB;EAC7CC,cAAc,EAAE,oBAAoB;EACpCC,sBAAsB,EAAE,2BAA2B;EACnDC,0BAA0B,EAAE,gCAAgC;EAC5DC,OAAO,EAAE,UAAU;EACnBC,aAAa,EAAE,kBAAkB;EACjCC,gBAAgB,EAAE,qBAAqB;EACvCC,UAAU,EAAE,aAAa;EACzBC,QAAQ,EAAE,UAAU;EACpBC,kDAAkD,EAAE,8FAA8F;EAClJC,SAAS,EAAE,YAAY;EACvBC,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE,UAAU;EACnBC,aAAa,EAAE,iCAAiC;EAChDC,gDAAgD,EAAE,4EAA4E;EAC9HC,WAAW,EAAE,cAAc;EAC3BC,yBAAyB,EAAE,+BAA+B;EAC1DC,sBAAsB,EAAE,6BAA6B;EACrDC,gCAAgC,EAAE,yCAAyC;EAC3EC,gBAAgB,EAAE,mBAAmB;EACrCC,aAAa,EAAE,gBAAgB;EAC/BC,SAAS,EAAE,aAAa;EACxBC,OAAO,EAAE,WAAW;EACpBC,MAAM,EAAE,QAAQ;EAChBC,SAAS,EAAE,YAAY;EACvBC,+CAA+C,EAAE,4DAA4D;EAC7GC,mBAAmB,EAAE,4BAA4B;EACjDC,sBAAsB,EAAE,+BAA+B;EACvDC,IAAI,EAAE,MAAM;EACZC,GAAG,EAAE,KAAK;EACVC,aAAa,EAAE,gBAAgB;EAC/BC,IAAI,EAAE,MAAM;EACZC,cAAc,EAAE,gBAAgB;EAChCC,kDAAkD,EAAE,uEAAuE;EAC3HC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE,SAAS;EAChBC,WAAW,EAAE,aAAa;EAC1BC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,QAAQ;EACbC,eAAe,EAAE,kBAAkB;EACnCC,WAAW,EAAE,cAAc;EAC3BC,OAAO,EAAE,SAAS;EAClBC,YAAY,EAAE,eAAe;EAC7BC,eAAe,EAAE,oBAAoB;EACrCC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,SAAS;EACjBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,MAAM;EACZC,kDAAkD,EAAE,4DAA4D;EAChHC,kDAAkD,EAAE,qGAAqG;EACzJC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE,YAAY;EACvBC,WAAW,EAAE,SAAS;EACtBC,gBAAgB,EAAE,oBAAoB;EACtCC,KAAK,EAAE,MAAM;EACbC,aAAa,EAAE,iBAAiB;EAChCC,IAAI,EAAE,MAAM;EACZC,aAAa,EAAE,eAAe;EAC9BC,kDAAkD,EAAE,mFAAmF;EACvIC,qCAAqC,EAAE,8CAA8C;EACrFC,qBAAqB,EAAE,yBAAyB;EAChDC,iDAAiD,EAAE,6DAA6D;EAChHC,sCAAsC,EAAE,+CAA+C;EACvFC,sBAAsB,EAAE,yBAAyB;EACjDC,sBAAsB,EAAE,2BAA2B;EACnDC,iCAAiC,EAAE,0CAA0C;EAC7EC,6BAA6B,EAAE,kCAAkC;EACjEC,YAAY,EAAE,eAAe;EAC7BC,UAAU,EAAE,gBAAgB;EAC5BC,aAAa,EAAE,gBAAgB;EAC/BC,OAAO,EAAE,SAAS;EAClBC,gBAAgB,EAAE,qBAAqB;EACvCC,cAAc,EAAE,mBAAmB;EACnCC,UAAU,EAAE,aAAa;EACzBC,UAAU,EAAE,YAAY;EACxBC,YAAY,EAAE,eAAe;EAC7BC,aAAa,EAAE,gBAAgB;EAC/BC,cAAc,EAAE,gBAAgB;EAChCC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,MAAM;EACZC,kDAAkD,EAAE,8EAA8E;EAClIC,WAAW,EAAE,YAAY;EACzBC,4BAA4B,EAAE,mCAAmC;EACjEC,OAAO,EAAE,UAAU;EACnBC,oBAAoB,EAAE,2BAA2B;EACjDC,qBAAqB,EAAE,yBAAyB;EAChDC,mDAAmD,EAAE,qGAAqG;EAC1JC,kBAAkB,EAAE,wBAAwB;EAC5CC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE,YAAY;EACvBC,WAAW,EAAE,cAAc;EAC3BC,cAAc,EAAE,gBAAgB;EAChCC,GAAG,EAAE,KAAK;EACVC,WAAW,EAAE,cAAc;EAC3BC,EAAE,EAAE,gBAAgB;EACpBC,YAAY,EAAE,eAAe;EAC7BC,YAAY,EAAE,cAAc;EAC5BC,cAAc,EAAE,iBAAiB;EACjCC,QAAQ,EAAE,UAAU;EACpBC,KAAK,EAAE,OAAO;EACdC,SAAS,EAAE,YAAY;EACvBC,UAAU,EAAE,aAAa;EACzBC,UAAU,EAAE,aAAa;EACzBC,OAAO,EAAE,UAAU;EACnBC,EAAE,EAAE,0BAA0B;EAC9BC,UAAU,EAAE,oBAAoB;EAChCC,MAAM,EAAE,SAAS;EACjBC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE,SAAS;EACjBC,QAAQ,EAAE,WAAW;EACrBC,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,QAAQ;EAChBC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,iBAAiB,EAAE,sBAAsB;EACzCC,aAAa,EAAE,kBAAkB;EACjCC,yBAAyB,EAAE,+BAA+B;EAC1DC,aAAa,EAAE,kBAAkB;EACjCC,aAAa,EAAE,oCAAoC;EACnDC,oBAAoB,EAAE,yBAAyB;EAC/CC,qBAAqB,EAAE,0BAA0B;EACjDC,mBAAmB,EAAE,wBAAwB;EAC7CC,eAAe,EAAE,oBAAoB;EACrCC,YAAY,EAAE,iBAAiB;EAC/BC,aAAa,EAAE,kBAAkB;EACjCC,sBAAsB,EAAE,2BAA2B;EACnDC,cAAc,EAAE,mBAAmB;EACnCC,UAAU,EAAE,aAAa;EACzBC,aAAa,EAAE,iBAAiB;EAChCC,gBAAgB,EAAE,sBAAsB;EACxCC,sBAAsB,EAAE,2BAA2B;EACnDC,0BAA0B,EAAE,+BAA+B;EAC3DC,kBAAkB,EAAE,uBAAuB;EAC3CC,oBAAoB,EAAE,yBAAyB;EAC/CC,cAAc,EAAE,mBAAmB;EACnCC,uBAAuB,EAAE,4BAA4B;EACrDC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,QAAQ;EAChBC,GAAG,EAAE,KAAK;EACVC,iBAAiB,EAAE,qBAAqB;EACxCC,YAAY,EAAE,eAAe;EAC7BC,WAAW,EAAE,aAAa;EAC1BC,YAAY,EAAE,cAAc;EAC5BC,cAAc,EAAE,iBAAiB;EACjCC,eAAe,EAAE,kBAAkB;EACnCC,iBAAiB,EAAE,oBAAoB;EACvCC,oBAAoB,EAAE,mDAAmD;EACzEC,QAAQ,EAAE,WAAW;EACrBC,SAAS,EAAE;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}